start	end	text
0	6360	はいどうも心絡みです 当然です
6360	8720	今週も1週間振り返っていきたい と思います
8720	9720	はいはい
9720	14680	昨今先生AI盛り上がってるんですけど 気になるニュースをやってたので
14680	20560	ちょっと話してみたいんですが 学校AIの利用が限定的にということで
20560	24920	文科省が指針案を出してて その指針案の内容がですね
24920	29520	なかなか言いたいことは分かる けど実行制度をするんだ的な指針
29520	34120	になってて 少し話したいなと思ってます
34120	37600	その指針案のポイントとして言 われてるのが
37600	40960	様々なリスクがあるんで限定的に 使ってくださいと
40960	46600	コンテンツ宿題とか作成される 際にはAIを使わないように指導
46600	49840	しましょうとか コンクールとかに出すコンテンツ
49840	53040	も意識して使わないようにしましょう とか
53160	57360	あとは著作権侵害を気にしてください ねっていうのが指針として出されてるん
57360	62920	ですけど 学校の先生がそこまで見れるとは
62920	67040	尊い思えないので この指針をどう受け止めればいい
67040	72320	のかが難しすぎるんですけど というふうに思いつつ
72320	81400	一方でAIを使ったコンテンツばかり がコンクールに出てもしょうもない
81400	84840	なっていうのも若干なくはない ので
84840	87400	どうあるべきかなっていうのを ちょっと聞いてみたいなと思って
87400	88400	ます
88400	93920	そうですね いろいろな方面から見方がある
93920	99600	とは思いますけれど まず先生がこれをやり切るっていう
99600	103360	のはかなり難しいっていうのは その通りですね
103360	108040	と思うので 真面目に受け取ると大変だろうな
108040	111360	という感じなんですけど 言ってることはしごく
111360	114680	もっともだと思うんで ここでの解決策は
114680	121960	なんかこう 外部というか先生もAI使えばいいん
121960	126480	じゃないのって AI検出AIを使えばいいんじゃない
126480	128720	のっていうのが ちょっと思っているところです
128720	132200	と
132200	137440	コンクールとかでAIのようなもの が出てくるのっていうのはもはや
137440	143800	どうしようもないと思うので そこに関してはコンクールの審査員
143800	149600	側がなれるしかないかなっていう 気がしています
149600	155680	あとAIは何でも出せるわけじゃなくて 何でも出せると言えば何でも出せるん
155680	158480	ですけど 何て言うんだろう
158480	161840	適当に使ったAIってAI臭いもの が出てくるっていうのがなんか
161840	164200	もう分かってきてるので現状だと
164200	165200	そうですね
165600	171080	目の越えた人が見ればAI臭いから 却下ってなると思いますという
171080	172080	段階
172080	177480	そういうAI臭いものは却下という ノリになるという流行りになる
177480	181000	だけじゃないでしょうかという ところで私はそこはあんまり
181000	185200	不安はありませんねというところ ですね
185200	191240	昔から評価されてた独創性みたいな ポイントの点でAIからベースに
191240	195160	作ったものは点数が極端に下がる から結果的に現れてくると
195160	196160	思います
196160	204000	そうですね過渡的には結構現れる とは思うんですけど長期的には
204000	205560	しぼむかなという認識です
205560	215800	なるほどねその辺はあれか今までも 先行した技術をどこまで使える
215800	219560	子供かどうかでだいぶ出てきた ものが違うからそういう差だ
219560	221840	と言えばそうでしょうという
222840	227320	今でも例えば宿題とかでもwiki 使ったらwiki使ったってたぶん
227320	233720	バレててなんでかというとwiki の文章臭いからそこから他の資料
233720	237840	を使ってた方便で調べてなんか 独自性があるものをかけてたら
237840	244200	それはもうその人の結果になる でしょうしやっぱりそこら辺見
244200	247560	りゃ分かると思うのでっていう ところですかね
248560	256240	どちらかというと実効性を高める のだったらそういうコンクール
256240	262640	とか受け入れる側の審査能力を 向上させる必要があるねってこと
262640	267200	で先生にやっぱりジャッジして そこで企画させるのって結構難しい
267200	272120	と思うからどっちかというと夏休み の宿題とかも数さばいていかない
272120	277360	のでいけんきねそんな指導して られないというかという現実も
277360	281360	あるんで
281360	286960	ただ作っちゃったものは先生が 通しちゃうと学校通しで出した
286960	292800	ことになっちゃうのでここの学校 指針案のポイントに記載されている
292800	300400	ように生徒にはまずAIの成果物 をそのままコンクールとかに出す
300400	305240	ということはコンクールのリージョン にもよるとは思いますけど不正
305240	310640	行為にあたるということを指導 してもらう必要はあるとは思います
310640	317600	けどねなんでその方針というか 前提として児童に言っておく児童
317600	321600	制度に言っておくというのは先生 の仕事かなと思いますけどそれ
321600	336160	以降は児童に任せるのが限界なん じゃないかなと思いますね
336160	339760	そういう意味だと今までも家の 人に書いてもらわないようにしましょう
339760	346440	とか指導レベルでは言っていた からそれと同等のことだけ言って
346440	350760	まあそれ以上はっていう感じかな そうですねそんな感じだと思って
350760	359320	ますなるほどねそれに言わんでも 結論は一致しているような気が
359320	366800	しますけどこのチャットGPTを使う ことで教育メリットとかデメリット
366800	374000	とかってどう思ってます教育メリット でどのレベルでチャットGPTを使う
374000	383160	ということを想定してますか 日常的にかな例えば算数の問題
383160	388280	を解くのに電卓を使ったりソロ ボンを使ったりっていうのから
388280	394040	だんだん来て今チャットGPTを使って 問題を解くみたいなそういう世界
394040	400520	に変わっていってるわけですけど そこについてもやっぱり今は電卓
400520	405320	を使うなとかいうことで基礎力 を身につけようとさせてますけど
405320	412040	その方針のままチャットGPTも便利 すぎるツールなので便利じゃない
412040	417800	ことを理解した上便利じゃない 状態で勉強した上で便利ツール
417800	424680	を使えるようにするっていうステップ アップを踏むべきなのかもうチャットGPT
424680	429640	がその電卓とかと比べても飛躍 的にできすぎるのでそのステップ
429640	434520	を追っかけててもキリがないという 諦めものはなくはないと思うん
434520	441760	ですけど
441760	448560	その話で言うとポストチャット GPTが出てきたときにさらに困る
448560	456920	ことになるので後者の話は考えて も仕方がないかなと思いますね
456920	462320	でボーダーをどこに引くかっていう 話であるんですけどもそもそもの
462320	467600	学校教育は基礎を学ぶだろうと 私は解釈しているので基礎っていう
467600	475240	のは成り立ちを理解することが 大事なのではないかと思っている
475240	480920	のでそういう意味では教育の場 ではあえて使わないようにしている
480920	484880	という解釈だと私は認識している のでその方向を捨てていくならば
484880	488200	チャットGPTであればどういう 選択だろうと使わずに一回は筆算
488200	490400	してみましょうというのが大切 かなと思いますけど
490400	499440	なるほどね
499440	504320	教育にAIはすごく役立つという のはあるけれどもあくまでそれは
504320	509840	学校以外のところの教育現場で 活用されるべきものであって学校
509840	514280	はおっしゃる通り基礎を身につける 場所という位置づけというかスタンス
514280	517280	をあまりぶらしてもしょうがない かなという感じですかね
517280	521560	そうですね特に小学校とかはという 話ですね大学レベルまでいくと
521560	523120	ちょっと話が変わってきますけど
523120	530000	はいはいはいはいそうですよね 塾もね学校とは違ってかなり先行
530000	535320	したことを教えたりとかいろいろ やっているわけですからその基礎
535320	539480	とは関係なくもっと効率的に解 けるようにする工夫とかいろいろ
539480	544320	教えているわけですけどああいう ものが学校外では許されている
544320	548480	のであればチャットGBTの登場シーン もそっちなんでしょうね
548480	554200	まあそうですねそのツールとして 何でしょう小学校の段階で生産性
554200	556240	云々は言うのはちょっと夢がない ですけど
556240	561040	いやでも夢ないくらい小学生みんな 塾通っているじゃないですか
562040	571920	まあ塾は何と言うんですかねある意味 選択性なので塾でその塾の受講者
571920	576560	に最適化された勉強方法を教える っていうのはすごく価値のある
576560	582160	ことだと思うのでそこでチャット GBTが有効な人であればそれは
582160	583160	いいと思います
583960	592280	はいはいはいなるほどねはいはい だいたい理解できましたありがとうございます
592280	598760	という枕を踏まえてまた今日も AIばっかりなんでこの後の話いきたい
598760	599760	と思います
599760	600760	はーい
600760	605760	はい1本目
605760	610000	未知のポッドキャストの敷居が下がる かもAIで持ち起こしてくれるサービス
610000	613920	リッスン登場ということでインターネット ウォッチの記事です
613920	619680	はてな創業者の近藤さんが起こした サービスだそうです
619680	624200	オープンAIの自動持ち起こしAI whisper を用いてアップロードしたポッドキャスト
624200	629000	の内容をテキスト化して共有できる サービスリッスンが6月21日正式
629000	630640	に提供された
630640	633880	ポッドキャストを再生するとそれに 同期してテキストがスクロール
633880	638040	&該当箇所がハイライトされて 表示されていくため耳だけでなく
638040	640420	目でも内容を追いかけられる
640420	643240	逆にテキストを読んで気になった 部分を再生するという使い方も
643240	644240	可能だ
644240	648040	1行ごとにリンクが発行されるため ポッドキャストの中の面白かった
648040	650240	箇所がピンポイントで共有できる
650240	653360	ポッドキャスターとリスナーを 繋ぐコミュニケーションサービス
653360	657720	としてポッドキャストの新しい 体験を提供するという同サービス
657720	662600	運営するのは株式会社ONDらによる プロジェクトチームだ
662600	667360	同社の代表取締役社長でありはてな 創業者としても知られる近藤氏
667360	671200	にリスナーを開発した経緯を狙い サービスの思いを聞いたということで
671200	678040	中の会話については割愛するので また気になる人は読んでおいて
678040	680240	欲しいんですけれども
680240	684680	私たちのこのポッドキャストも 独自にウィスパーによるテキスト化
684680	687760	というのをやって投稿している 状態ですと
687760	694680	それが明確にサービス化されました よという紹介ですね
694680	698400	そういう意味だとこういうこと になってくるだろうなというのを
698400	701680	見越して私たちはやっていたり したので
701680	705960	そういう意味で既定路線といえば 既定路線なんですけれども
705960	712360	ポイントとしてすごいところが リアルタイム性のところですね
712360	717320	実際の音声データとストックされた テキストの紐付けというのが
717320	721280	タイムスタンプを合わせ込んだり とかリンクを繋げたりというところ
721280	724200	の仕掛けというのが技術的には できるんだろうなと思いつつ
724200	729400	結構面倒くさいのでそれができる タフなサービスを作れるのが
729400	732200	さすがだなという感じですかね
732200	740160	そうですね いいですねこれ登録してみたいな
740160	747000	言った通りうちのこのデータも 廊下でウィスパーに加わせて
747000	751080	ポッドキャストのデータとして GitHubにはアップされているんですけども
751080	756200	いまいち活用できていなかった というのが正直なところではあったんで
756200	761400	そういう意味でこういうまとまった サービスによって
761400	768440	ウィスパーの強みである認識率 の高さとタイムスタンプの活用
768440	773560	というのがちゃんとできている というところですごく
773560	778680	作っている側からするととても 良いものだなという感じですね
778680	786520	そうですね テキスト化されることで何が良くなるのか
786520	793160	というのは改めて共有しておくと 検索性ですよね
793160	799320	音声データというのは残念ながら テキスト検索に対応していないことが多くて
799320	804600	あるポッドキャストの中で気になる 話題が含まれているかもしれないけれども
804600	810200	タイトルからそれが伺えない以上は 聞かないということがほとんどだし
810200	815000	その話題があるということまで わかっても何分何秒からその話題をしているのか
815000	820840	その話題がいつ終わるのかというのが わからなければ聞きにもいかないと
820840	827160	それが仮に1時間後の10分とか5分だけです とか言われるとなかなかしんどいので
827160	831800	聞かないということが多いんですけれども こういったサービスが出てくると
831800	836680	そういった検索性にひも付いて このポッドキャストをちょっと聞いてみようか
836680	842120	という動線が新たに生まれ得る というところですね
842120	850520	まさにそこだと思ってまして 具体例で言うとYouTubeのショートとか
850520	856840	ああいう15秒ぐらいの動画というのが やっぱり再生数としてかなり
856840	861400	インパクトのある時代になってきている中で ポッドキャスト1時間長すぎるんですよね
861400	865880	マジで長すぎる 10秒だけ言っていることが聞きたいという状況で
865880	872360	どこにあるかわかんないので YouTubeでもやっぱり切り抜き動画みたいになったりしますし
872360	876120	そういう状況がポッドキャストで でき得ることになってきているというのは
876120	880440	かなりありがたいなというところ
880440	888360	もう一つはそれこそこれをAIに食わせる テキストベースなのでこれをAIに食わせて
888360	895080	それこそチャットGPTがここに何かそういう話をしている 会社のこの人とこの人がいましたよみたいな
895080	901400	情報源になり得るというのは ポッドキャストの音声データという
901400	911000	加工しにくいデータを使いやすくしている というところでかなり
911000	916840	インパクトがあって嬉しいなという感じですね
916840	920120	今のコメントを聞いてて2つほど思ったことがあって
920120	925720	一つは今後この文字起こしのデータをドラッグして
925720	934520	この文章からこの文章みたいな感じで 選択したらその部分だけを音声切り出しした
934520	940600	ショートポッドキャストをその場で聞けるっていう サービスに変わっていきそうだなと思いました
941160	946200	確かにそれありですね ダラダラこうやって口喋っているのが
946200	949960	ようやくを出してくれるみたいなね
949960	952360	とてもいいですね
952360	960920	あとは今おっしゃった面白いところが そのパーソナリティと話したことの紐付けみたいなところができてくると
960920	965720	もう少しメタバースっぽくなるなと思ってて
965800	972760	ポッドキャストで話している内容はすごくその人の持っているスキルだったり
972760	977880	関心興味が露出している 発露している状態だと思っているので
977880	982440	このポッドキャストのテキストをベースに この人の属性はこんなんですっていう
982440	993800	逆紐付けができるとその人の名刺情報というか その人のメタ情報のデータ源としてすごく有用なのかなって気がしたので
993800	999720	そこのメタ情報変換化をまたAIとかでできると良いなぁと思いました
999720	1003320	確かにいいですね
1003320	1010440	タグ付けみたいな感じですよね 自動提言に設定されたりすると面白いかもしれない
1010440	1015640	そうですね 私たちの中では例えばロボットだったり宇宙だったり
1015640	1019240	特に日本の宇宙事業とかに関心が高いよねとか
1019720	1024840	ある程度なんとなくそういうタグ付けを自分たちの中に持ってますけど
1024840	1030360	第三者にはやっぱりわかんないので そういうタグ付けをちゃんとつけてあげる
1030360	1033800	っていうのがいいなぁと思いましたね
1033800	1037560	いいですね ちょっと後で登録しましょうこれ
1037560	1040680	そうですね
1040680	1045480	すいません私もまだサービスの使い方は分かってないんですけど
1045480	1051640	ログインして突っ込む感じで生成されるっぽい
1051640	1056840	じゃあリカログアカウントでちょっと登録してみましょうか
1059000	1064680	というのが1点目です 次いきます
1064680	1071240	2点目 Microsoft 軽量かつ高性能な大規模言語モデル PHY.1 を発表
1071240	1073560	ということで ASCII の記事です
1073560	1077160	マイクロソフトリサーチの AI 研究チームは6月20日
1077160	1081960	わずか13億パラメーターと 従来のモデルよりもサイズが小さいにもかかわらず
1081960	1085160	GPT 3.5 を上回る成績を収めた
1085160	1089960	トランスフォーマベースの大規模言語モデル PHY.1 を発表した
1089960	1097000	このモデルは間もなくハギングフェイスで公開される予定だという
1097000	1102040	テキストブックアーオールユーニーズと題された研究論文によると
1102040	1106760	このモデルは初代の A100 NVIDIA の高性能GPUで
1106760	1109720	わずか4日間かけて訓練され
1109720	1112840	インターネット上から取得した60億のトークンの
1112840	1116840	強化進出データセットと GPT 3.5 で生成した
1116840	1121160	10億トークンの微調整用練習問題データセットが使用された
1121160	1125800	サイズが小さにもかかわらず PHY.1 は LLM の性能を測定するためのベンチマーク
1125800	1131960	Human Eval で50.6% MBBP で55.5% を達成した
1131960	1134920	この数値は無料版のチャットGPTの新増部である
1134920	1139720	GPT 3.5 の Human Eval 47% を上回っている
1139720	1142120	また PHY.1 と同種号で訓練された
1142120	1145560	3億5000万パラメータの PHY.1 Small モデルも
1145560	1150040	Human Eval で45% を達成している
1151480	1153640	トランスフォーマーアーキテクチャの発見以降
1153640	1155800	大規模ニューラルネットワークを訓練する技術は
1155800	1157480	強力な進歩を遂げてきたが
1157480	1161080	その仕組みにはまだまだブラックボックスとなっている部分が多い
1161080	1163800	計算量またはネットワークサイズを極端に大きくすると
1163800	1168920	性能が優位に向上するスケーリング法則と呼ばれる現象もその一つだ
1168920	1174280	この法則のもと大規模言語モデルの大型化が進んできたわけだが
1174280	1179800	大型化したモデルを訓練するには莫大なコンピュータリソースが必要となるため
1179800	1183640	良さの潤沢でないスタートアップの参入が難しいという弊害がある
1183640	1187240	そこで考えられたのがモデルのサイズを大きくする代わりに
1187240	1193080	データの質を向上させることでモデルのパフォーマンスを向上させるというアプローチだ
1193080	1197240	例えばデータクリーニングはデータセット作成の重要な部分であり
1197240	1199480	データセットが多少小さくなったり
1199480	1203480	データに対して多くのパスができるようになったりと副次的な利点もある
1203560	1208280	ファイワンはインターネット上から取得した教科書品質のデータセットと
1208280	1213400	GPET 3.5で生成した微調整用練習問題データセットを使用することで
1213400	1218680	データの質を向上させモデルのパフォーマンスを向上することに成功した
1218680	1226440	ということで以前クラウド上にこういう大規模言語モデルを展開していくと
1226440	1233400	なかなかCO2の排出量とか膨れ上がって活発化すればするほど
1233400	1239400	SDGs的に課題が生まれてくるというような話もちらっとしてたかなと思うんですけど
1239400	1246360	そういったものに対抗して小規模なPCリソースで動く
1246360	1251000	かつ高性能な言語モデルが登場してきましたよというニュースで
1251000	1258920	それをオープンAIを買収したマイクロソフトの中から出てきているというのがちょっと面白いところですね
1258920	1263160	ただ今言った話が単純にすごい良いじゃん
1263160	1269560	じゃあこっち使えばいいじゃんっていう話にならないところとしてポイントとなるのが
1269560	1275000	データセットの元の情報がその教科書品質のデータセットと言っているもので
1275000	1282360	すごく絞り込んだデータこれは角度高いだろうというデータに絞り込んでるので
1282360	1286840	ある意味はしばしに届いた回答みたいなのが難しくなっている
1286840	1291720	その自由度の高い回答っていうのが難しくなっている可能性があるっていうところと
1291720	1297960	データセットの一つとしてGPT3.5で生成した情報を用いているので
1297960	1310040	ベンチマークかそもそもGPTとかそういったものを評価するためのベンチマークになっているので
1310040	1311240	何でしょうね
1311240	1320160	自己生産的にやってるからよりAI的には正しくなっているというような数値の見せかけが起きていて
1320160	1324080	体験として良くなっているかどうかがわからないというところがあるので
1324080	1327440	そこら辺は注意して見ないといけないかなと思っています
1329440	1332960	はい、なるほどねという感じですけども
1332960	1339520	まさに言った通りだなというところがあって
1339520	1345760	本間に使えるかどうかはわからんけども
1346320	1353920	まあでも多分そんなに品質が落ちてるかっていうのか人間にはわからない可能性もあって
1353920	1365040	まあそうであればモデルのパラメータ数が2桁落ちているので
1365040	1372000	計算能力もそんなにいらないだろうと展開する領域も少ないので
1372000	1376480	そうすると
1376480	1387200	マイクロソフトとしてGPTよりも優位性がありますよこれ使ってくださいとお出しするという意味では
1387200	1393360	お出しするときの価値をアピールしやすい
1393360	1400480	100番の1ですよ、聴教しやすいです、訓練しやすいですよというところで
1401440	1408640	とてもマイクロソフト側からしたらわかりやすいものが出てきたかなというところですね
1408640	1412960	懸念点は最初のように言いましたけどやっぱりその通りで
1412960	1416560	まあ人間が使った時にちょっと違和感がある可能性があるのと
1416560	1423120	そもそもChatGPTが教えた子供になるので
1423120	1426400	なんとんですかね
1426400	1436400	人間が使っているレベルというか
1436400	1447760	変な進化が起こってないかみたいなところがちょっと怖いところですねという認識です
1447760	1455120	そうですね以前AI同士に会話させるという実験的な試みがあって
1455120	1460480	ボブとアリスだったかなが会話しているみたいなのがあったんですけど
1460480	1466400	それの終着点というのがボブとアリスの中で新たな言語を生み出して
1466400	1471360	単語の長さAAばかり言うとかそんな感じで
1471360	1476720	人間には理解できない言葉で喋り始めたっていう結果が得られてますと
1476720	1482720	それはその時のAIがそのレベルだったっていうのはもちろんなんですけれども
1482720	1487760	AI同士の学習っていうのが人間から離れれば離れるほど
1487760	1493840	私たちにとっては逆に価値のないAIになってしまいかねないというリスクがはらんでいるので
1493840	1497360	その辺がちょっと気になっているというくらいですね
1497360	1503920	そうですねまあそこらへんもでも今考えると人間がやっと追いついてきたというか
1503920	1509280	今の人間ChatGPTのトークン数を気にして何か圧縮してるじゃないですか
1510080	1515280	同じことやってるな今から考えるという感じが非常に面白いんですけども
1515280	1522480	まあその人間様の速度に合わせて回答してくれないと人間様が理解できないので
1522480	1531360	そのレベルに落とした回答をもらえるようなアプリケーションが人間としては一番良い
1531360	1537360	というところでどうなるかなという感じですけど
1537360	1541200	方向性としては分かる話だと思うので
1541200	1547920	ちょっとあまりにも重たいよねもうちょっと軽くして何とかしたものを欲しいんだけど
1547920	1552800	重くしたことによって性能が出たんでそれを軽くするにはどうするのっていうところで
1552800	1562240	重くしたデータに教えてもらうというのはまあ分かる話なので
1562240	1566320	はいいいんじゃないかなという感じです
1566400	1575440	そうですねなのでPCの業界で言うとこのCPUのランクみたいな感じで
1575440	1581680	CPUのハイエンドモデルミドルエンドモデルローエンドモデルってあると思うんですけど
1581680	1587280	ミドルエンドとローエンドっていうのはハイエンドのアーキテクチャができた上で
1587280	1592720	じゃあそれをミドルエンドローエンドにするにはどうするかっていう開発手法ですよねあっちは
1592960	1598560	そうですねと同じような流れを踏襲しているのかなという感じですよね
1598560	1602080	そうですね確かにそう言われればそうか
1602080	1605280	なのでやっぱりガッツリ
1605280	1609920	フルスペックを出すときにはガッツリ重たいものを動かして
1609920	1614640	そこから上積みを抽出して
1614640	1620400	震度はないけど軽くて使いやすいものを一時に放出する
1620400	1625760	確かにそう言われてみると成功法だなという感じはしますね
1625760	1628080	そうですね
1628080	1637360	そういう開発プロセス文化みたいなものすらこの短期間で生まれつつあるのが恐ろしいところくらいですかね
1637360	1638960	そうですね
1638960	1644000	半導体の今の言った歴史なんて10年くらいかけて出来上がってきたものだと思うんですけど
1644000	1647520	数ヶ月で出来上がってきているんで
1648480	1655040	まあ需要があるし供給があるしみんな飛びついたというところで
1655040	1658640	そうですね
1659520	1665120	軽量化のところでマイクロソフトが出してきたのが面白いという話をしたんですけど
1665120	1667920	少し背景として
1667920	1677840	マイクロソフトがやっているクラウドサービスAzureというところでオープンAIサービスが立ち上がるようになっているんですけれども
1677840	1686960	あれを展開する上でですねかなりマイクロソフトは赤字というか出血している状態になってますと
1686960	1694160	何かというとですねオープンAIのマネタイズモデルがその利用するトークン数
1694160	1707440	アクセスする時のトークン数で課金する重量課金制だったというところでインフラとしてはある程度決められたリソースをみんなで共通でAPIを投げるので
1707440	1713360	オープンAIが持っているサーバー側の処理限界に応じて
1713360	1717520	まあレスポンスが悪くなったりするけど我慢してねっていう世界でしたと
1717600	1729600	いうのに対してマイクロソフトのAzureでやってるやり方っていうのはそのクラウドリソースの一つとしてオープンAIサービスを立ち上げるので
1729600	1736480	ユーザーごと利用者ごとにオープンAIのモデルがデプロイされるみたいな状態になるんですよ
1736640	1743040	ということはAzureの中でこの大規模言語モデルがですね
1743040	1748160	いろんなユーザーのいろんな会社の中でボボボボボと生まれまくってるっていうのが現状で
1748160	1754960	それに対してオープンAIの重量課金制をそのまま踏襲して利用者の促進を促しているもんだから
1754960	1760720	サーバー費っていうのが全部マイクロソフト持ちなんですよね今
1760720	1764720	この大規模言語モデルを動かせるサーバーを
1764720	1768720	ホイホイ送っていくこと自体が非常に高価なはずで
1768720	1772720	大規模言語モデルのGPT3.5を動かすためには
1772720	1776720	多分メモリは少なくとも128GBくらいいるので
1776720	1778720	そんなサーバーをホイホイホイホイホイ
1778720	1781720	いろんな会社のいろんなユーザーの分立ち上げていたら
1781720	1783720	マイクロソフトは生きていけないはずなんですけど
1783720	1787720	今のところユーザーには請求していないので
1787720	1790720	これは急ぎなんとかせんといけんっていうのが
1790720	1792720	マイクロソフトの中にあり
1792720	1795720	差し替えとしてファイブワンとか
1795720	1798720	同じレベルのものできますよっていうのを早く出して
1798720	1800720	ユーザーにはちょっと置き換えを
1800720	1803720	推奨していきたいんだろうなというのはあります
1803720	1804720	なるほどね
1804720	1807720	それは分かる話ですし
1807720	1811720	マイクロソフト体力あってよかったなという感じですね
1811720	1812720	そうですね
1812720	1816720	それ並の会社だったら破産してて
1816720	1819720	ひと山崩れてたところですねというところですね
1819720	1821720	そうですね
1821720	1825720	マイクロソフトがクラウドを接近しそうとか
1825720	1826720	いろいろ言ってるけど
1826720	1830720	その裏ではすごい大規模な投資があって
1830720	1832720	かなりチャレンジングとか
1832720	1835720	リスクを背負った経営層判断のものできてるっていうのは
1835720	1838720	理解しておいたほうがいいかなと
1838720	1840720	マイクロソフトがあれだけのことできてるっていう
1840720	1842720	表面だけを捕まえてると
1842720	1845720	なかなか見えてこないですけど
1846720	1849720	すごいことやってます
1849720	1851720	という感じで
1851720	1854720	ファイワンについても以上です
1854720	1856720	今日最後ですね
1856720	1857720	3点目
1857720	1859720	マイクロソフト新しいOSセキュリティ技術
1859720	1862720	Win32アップアイソレーションを発表
1862720	1865720	ということで窓の森の記事です
1865720	1869720	最近AI含めてマイクロソフトばっかりのニュースで
1869720	1871720	申し訳ないんですけど
1871720	1874720	米マイクロソフトは6月14日
1874720	1877720	Win32アップアイソレーションを発表した
1877720	1881720	Win32アプリケーションの脆弱性を悪用した攻撃から
1881720	1884720	Windowsクライアントを保護する新しいセキュリティ技術だ
1884720	1887720	未知の脆弱性やパッチが適用されていない脆弱性を
1887720	1889720	悪用したセキュリティ攻撃は
1889720	1892720	ここ数年でその頻度と影響を増している
1892720	1895720	そこで同社は心霊的なアプリ疑わしいアプリをブロックする
1895720	1897720	スマートアプリ制御を導入し
1897720	1900720	攻撃面の減少に努めている
1900720	1902720	しかしこうした手法は
1902720	1906720	人気アプリのゼロで脆弱性をついた攻撃などに対しては無力だ
1906720	1909720	そこで被害が最小限に抑えるための
1909720	1911720	別のアプローチが必要となる
1911720	1915720	Win32アップアイソレーションの基本的なコンセプトは
1915720	1919720	アプリをできるだけ低い権限で動作させること
1919720	1921720	Win32アプリは自由度が高く
1921720	1924720	誤解を恐れずに言えばやりたい放題だが
1924720	1928720	それをAppContainerと呼ばれるサンドボックス境に閉じ込め
1928720	1930720	システムからの隔離を図る
1930720	1932720	こうすることで万が一アプリが乗っ取られても
1932720	1935720	システムやその他の領域が守られるというわけだ
1935720	1939720	AppContainerはストアアプリやマーケットソフトエンジンなどで採用されており
1939720	1941720	既に実績もある
1941720	1944720	既存のWin32アプリをパッケージングする
1944720	1947720	MSIXパッケージングツールを活用すれば
1947720	1950720	比較的容易に対応できるのも魅力だ
1950720	1952720	しかし一方でアプリの権限が低いと
1952720	1954720	ファイルシステムやトースト通知
1954720	1958720	タスクトレイプリンターといったリソースへのアクセスまで制限されてしまう
1958720	1961720	これでは機能性操作性が著しく低下し
1961720	1963720	アプリは使い物にならない
1963720	1966720	そこで第2弾としてアプリを実際に動かし
1966720	1968720	それが利用しているリソースを調査して
1968720	1972720	そのリソースにだけアクセスを強化する仕組みが必要となる
1972720	1975720	これを開発者が手動で行うのも負担となるが
1975720	1980720	Application Capability Profilerと呼ばれるツールを利用すれば自動化できる
1980720	1983720	つまりWin32アイソレーションであれば
1983720	1985720	アプリ開発者に大きな負担を強いることなく
1985720	1988720	エンドユーザーをゼロと一致性から守ることができるわけだ
1988720	1992720	エンドユーザーにとってもやりたい放題なWin32アプリをコントロールし
1992720	1997720	使わせたくないリソースへのアクセスを拒否できる点は安心感につながるだろう
1997720	2002720	Win32 App IsolationはOS標準のセキュリティ機能となるべく設計されており
2002720	2006720	アクセスを強化したリソースはOSのプライバシー設定で確認したり
2006720	2008720	後から変更ができる
2008720	2011720	不審なアプリを侵入したいスマートアプリ制御と
2011720	2015720	万が一導入済みのアプリが攻撃を受けた際の被害を最小限にする
2015720	2018720	Win32 App Isolationを含み合わせれば
2018720	2020720	医療機の相乗効果が見込める
2020720	2022720	ということで
2022720	2029720	新たなレイヤーでのWindowsアプリセキュリティソリューションです
2029720	2032720	めちゃくちゃ新しいことを言っているかというと
2032720	2034720	全然そのでもなくて
2034720	2037720	Android OSとかスマートフォンOSの中では
2037720	2041720	各アプリごとに最小権限の有効化というのを
2041720	2045720	非常に厳格に求める仕掛けが既に行われており
2045720	2050720	その概念がWindowsにも入ってきたというだけといえばだけです
2050720	2054720	一番のポイントは既存のアプリを含めて
2054720	2059720	柔軟に対応でき得るというところがポイントで
2059720	2062720	こういうゼロで脆弱性とかを受ける
2062720	2064720	アタックの対象になるアプリは
2064720	2067720	すべからくレガシーであるというところが課題なので
2067720	2073720	そこに対する打ち手が明確に取られているところが非常に魅力的です
2073720	2077720	この文化が進むとWindowsアプリ自体が
2077720	2082720	Android OSとかと同じような世界観に変わっていくので
2082720	2087720	先行してスマートフォン業界のアプリ開発として行われてきた
2087720	2092720	セキュリティ対策をWindows側に取り込めるようになって
2093720	2098720	よりWindowsがセキュアなOSとして代表的になっていける可能性があります
2098720	2101720	実際スマートフォンに対して
2101720	2106720	スマートフォン端末自身がアタックの対象になったとか
2106720	2108720	そういうニュースはあまり聞かれないので
2108720	2112720	現状こういったPC環境よりもスマートフォンの方が
2112720	2115720	セキュリティレベルが高いということを簡単に見ると
2115720	2121720	それを追いかけようとしているマイクロソフトのこの動きは非常に良いのかなと思っています
2122720	2128720	はい 内容自体は非常に良いかなと思っています
2130720	2133720	何ですかね 制限はしたい 制限はしたいけど
2133720	2137720	制限すると使い物にならないというところで
2137720	2143720	実際使うものだけ最初に許可書を持たせればいいよね
2143720	2147720	その判定すらもこのツールを使ったら分かるので
2147720	2158720	書いてくれればWin32のアプリでもセキュリティ対策ができるよという話なので
2158720	2165720	すごく良いものをお出ししてきたなというところですね
2165720	2167720	ちょっといろいろ分かってないのが
2167720	2174720	まずWin32以降の64ビットのソフトは
2174720	2181720	そもそもこういうこと用が権限制限されているという認識でいいのかな
2183720	2189720	というよりはWindowsのマイクロソフトストアで配信されるアプリについては
2189720	2196720	こういうものを設定したビルドツールでないと公開できないが正しいですかね
2196720	2202720	なるほどね なのでそこから落としてきたアプリケーションはそもそも対策が取られていると
2202720	2204720	そうですね
2208720	2216720	64ビットのWindowsであっても普通にネットから.msiみたいなファイルを落としてきて実行する場合には一緒です
2216720	2218720	なるほど
2218720	2220720	対策が必須です
2220720	2222720	なので次はそこなんですよね
2222720	2226720	64ビットであると32ビットであろうと
2226720	2236720	パスを通さずに落としてきたものが結局それを入れたいと思って落としてきているはずなので
2236720	2243720	入れましたなんかワーディング出たけどよくわかんないけど押しましたっていうのが防げないなというところ
2243720	2247720	でアップデートしてくれてるとまだいいんですけども
2247720	2252720	そこまで言うとそこ沼がないから
2252720	2263720	そもそももはやアップデートされてないアプリケーションとかはもはやこれの対応とかそういう話の次元ではないので
2263720	2271720	なんでしょうね救えるところは救ったけども最終的なところがやっぱり難しいよねという話になっちゃうのかな
2271720	2275720	というところですね
2276720	2283720	パッケージ自体はすごく素晴らしいものなので良いと思いますがというところです
2283720	2287720	でもう一つ
2287720	2292720	アンドロイドは結構そこら辺の権限がしっかりしているっていう話でしたけど
2292720	2298720	なんかアンドロイドのアプリって結構権限がザクッとしてて
2298720	2308720	ツイッターのアプリケーションとかでもなんかいろいろとつかむなぁみたいな印象があったんですけど最近はそこら辺は改善されているという認識なんですか
2308720	2310720	いや改善されてないです
2310720	2313720	そうなんですね
2313720	2321720	おっしゃる通りで何でもかんでも権限を要求しがち問題は解消されてないですね
2321720	2323720	なるほど
2323720	2336720	Google側ももともとのモチベーションが利用者ユーザーの許可なしにあらゆるデータに触らせはいけないよねっていうEUの施策を受けて導入しているので
2336720	2345720	まあ許可したんだからユーザーの責任じゃんっていう感じであんまりそこを是正する気がなさそうに見えますね
2345720	2359720	まあなるほどねまあというかそこを結構テコ入れするとかなりコストがかかると思うので大変というのもあると思いますが全権限を総ざらえして組み込まないといけないので
2359720	2361720	そうですね
2361720	2371720	その辺はiOSとかもともとアプリの審査が厳しいところであればチェックするフェーズがあるんでまだいいんでしょうけどね
2371720	2373720	まあね確かに
2373720	2384720	そういう意味でアンドロイドはそのストアというものが強力なのであまりストア以外から入れるということをしないというところで
2384720	2390720	ある程度救われているというのは確かにそれはそうですね
2390720	2396720	そもそもビルドツールも公式の強制されたものでしかできないとかあるんで
2396720	2404720	まあマイクロソフトがそれするのはちょっとマイクロソフトの歴史からすると難しいかなというところだと思うので
2404720	2417720	介護管制とかそういったものを維持しようとするとどうしても厳しい領域が出てくるのでこういう変換ツールを出してきたっていう世界だと思いますね
2417720	2419720	なるほどね
2419720	2423720	ようやってると思いますわという話ですかね
2423720	2425720	そうですね
2425720	2431720	ちなみにMacってそういう感じなんですか使ったことがないのかわからない
2431720	2433720	Macどうなんだろうな
2433720	2435720	どうなんですかね
2435720	2445720	ちょっとわからないけれどもあれはもうLinux系と一緒でアプリケーション一つ一つに権限設定する仕掛けになっていると思いますね
2445720	2452720	なるほどなのでインストールするときに権限を確認すればいいという手法なのかな
2452720	2460720	まあおそらくです知識がLinuxベースだとそうだろうくらいのレベルの推定でしゃべっています
2460720	2462720	なるほどね
2462720	2472720	この話が進む先というかそうなったら面白そうだなという世界観で言うと
2472720	2485720	今日本企業におけるIT部のPCに入れていいソフトかどうかのハンドリングっていうのは非常にアナログで
2485720	2491720	厳格にやっているところはIT部が許可したツールだけをインストールできます
2491720	2496720	これはMicrosoftオフィスのみですみたいなそういった運用をしているし
2496720	2501720	そうでないところは基本的にフリーのやつとかツールは入れないでね
2501720	2506720	自己責任になるよやめてねっていう指針だけ発表しつつ厳格なルール化はできていない
2506720	2511720	というか規制はできていないっていうのが現状かなと思っています
2511720	2520720	この発表を受けてできることとしてはやろうと思えばこうやったツールで厳格
2521720	2528720	隔離化ができるようになっているしMicrosoftストアからインストールしたものであれば隔離化ができているのであれば
2528720	2534720	社員は自身のPCに何かツールを導入する場合
2534720	2540720	この対応ができていないツールのインストールは不可ですという制限はかけられますと
2540720	2546720	多分Windowsのユーザーグループポリシーで制限かけられると思います
2546720	2550720	そうした場合ユーザーはレガシーなツールを使えなくなる
2550720	2553720	社員はレガシーなツールを使えなくなるんですけど
2553720	2562720	レガシーなツールを使い続けること自体が今回の話のような脆弱性の悪用によるアタックを受けるので
2562720	2568720	社員はそういうリスクを取ってはならないという明確化ができるのかなと思います
2568720	2575720	一方でどうしてもそういうのを使い倒さないといけないという世界も存在するので
2576720	2583720	そこについてはまず第一歩としてクラウドの新クライアント側で使ってくださいと
2583720	2590720	新クライアント先のリモートクラウド環境というのは
2590720	2598720	ベースのOSレベルのパッチだったりとかインターフェースに対する脆弱性等々については
2598720	2601720	クラウド側が責任を持つということになっていて
2601720	2603720	自社で責任を持つ必要がないので
2603720	2611720	IT部としては責任範囲外のところでの脆弱性をアタックされたというだけの話なので
2611720	2615720	ある意味気にしなくていいと
2615720	2619720	クラウドからではやっぱりレガシーすぎて使えないと
2619720	2622720	ローカルのシリアルコンソールを使いたいんだみたいな話になると
2622720	2627720	ちょっと専用キーみたいな例外対応が出てくるかもしれないんですけど
2627720	2634720	最初の1,2の新クライアント化とこのアプリしか使えませんよという限定化によって
2634720	2639720	一定レベルのセキュリティの底上げが図れるのかなというのはあるので
2639720	2644720	もしかしたらそういう対応が常識に変わっていくかもしれないなと思っています
2647720	2652720	良き未来ですねという感じですけど
2652720	2659720	ソフトウェアの供給側がやっぱり対応してくれればそういう未来もあるかと思いますけど
2659720	2664720	マジのマジのレガシーはおそらく専用キーになって
2664720	2672720	専用キーがはびこっちゃってIT部大変みたいな感じになりそうだなという気もせんでもない
2673720	2675720	そうですね
2675720	2685720	こういう方針をとるにしても結局ソフトウェアがこれに対応してビルドするという工程が必要なわけで
2685720	2688720	そもそものアプリケーションが対応してない
2688720	2693720	そんなソフトを法人で使うのという話ではあるんだけども
2693720	2694720	そうですね
2694720	2700720	使うだと言って気にしているのがそういう意味では一番正しいか
2700720	2703720	セキュリティーの観点だけで一番正しい
2703720	2705720	そうですねという感じはありますけど
2705720	2711720	でもこの装置を動かすにはこのアプリケーションが必要なんだけども
2711720	2717720	開発した会社が撤退してるんですよとかザラにあったりするので
2717720	2723720	たぶん一番アタックを受けてかつ困るのがライセンスサーバー
2723720	2725720	そうですね確かに
2725720	2731720	Windows上で動くライセンサーバーはクッソレガシーなウェブ技術で立っていることが多くてですね
2731720	2742720	ポートに対しても普通にTCPで直接アクセスしていないくらいの非暗号化通信が常識的に行われていて
2742720	2750720	ネットワーク上のフローティングライセンスが一番ハックされがちというレガシー問題を度元化さないといけないのですけど
2750720	2752720	どうなのって感じですね
2753720	2764720	新しい会社だとちゃんとした会社のサービスを使ってて物理機器を使ったりしてるとは思うんですけど
2764720	2773720	古いソフトほどそういうのが対応できないまま放置されているのでなかなか頭が痛いですね
2773720	2775720	頭痛いけどそうだよな
2775720	2781720	でもWindows7とかのサポートが切れたらものすごい頑張って投資してPC置き換えとかやるわけじゃないですか
2781720	2783720	まあね
2783720	2789720	ソフトの世界でもそういうことが常識に変わってきたよということで
2789720	2793720	みんな頑張って理解するしかないような気もしてきましたけどね
2793720	2800720	変わってきましたよって何年前から変わってるんですかっていい加減に認識してくださいというレベルの話だと思いますけど
2800720	2806720	確かにOSは変えたら変わりましょうって言って頑張ったんだけど
2806720	2814720	なんで個々のアプリケーションレベルでそういうことをしないのか
2814720	2817720	まあ費用対効果みたいな話をするんだろうけど
2817720	2825720	まあそうですねOSごと入れ替えるって結局作業用のPCごと入れ替えるって話になるので
2825720	2828720	それやったらそのPC範囲で止まりますけど
2828720	2833720	エテシってさっき言ってた動かないソフトって装置についてるものなので
2833720	2836720	そもそも入れ替えとかがないですよね
2836720	2840720	まあそうだね入れ替え先っていうのはもう代替案がなくて
2840720	2846720	新しくシステム再構築みたいな選択肢しかないっていうのは正直あるでしょうね
2846720	2850720	まあそうですね
2850720	2853720	そこでより良い選択肢とか選べればいいんでしょうけど
2853720	2857720	エテシってそういうのが残ってるのは会社から見ると
2857720	2862720	もう撤退事業で最後の金稼ぎをやってる事業だったりすることが多いから
2862720	2867720	投資そこに咲くのはないでしょうって判断が起きちゃいますよね
2867720	2870720	まあそうですね今更財布つけられないですもんね
2870720	2872720	そうですね
2872720	2878720	まあそうすると金稼げるとここまでだって思う方が正しいのか
2879720	2886720	まあまあレガシーすぎるソフトはそうですけど話を戻すと
2886720	2892720	このWin32アップアイソレーション自体はこれが標準になれば
2892720	2895720	今後最後の話がなくなってくると思うので
2895720	2901720	とても良いんじゃないでしょうかというところに着地できますね
2901720	2904720	ビルド済みバイナリーを取り込めるとかいう
2904720	2908720	そういう仕掛けまでできると最高ですね
2908720	2912720	それはどういう話ですか
2912720	2915720	でもできるのかな
2915720	2920720	私は今回の話でその変換ツールっていうのが
2920720	2925720	実際に.exeファイルをビルドする時にツールを導入すれば
2925720	2930720	これに対応したツールに変換できますよってことかと思ってたんですけど
2931720	2938720	文章的には既存のWin32アプリをパッケージングするツールがあるって言ってるから
2938720	2945720	バイナリーさえ手に入れば誰でもこれ対応ができるかも
2945720	2948720	なるほど
2948720	2955720	ゼロデイ攻撃される前にパッケージングというかこいつで通しておけば
2955720	2957720	その後ゼロデイ攻撃が発生しても
2957720	2963720	今まで使ってたアクセス権限じゃないところから権限出してるけど
2963720	2966720	大丈夫って言ってくれるってこと
2966720	2968720	そうそう
2968720	2972720	レガシーなやつを使い続けなきゃいけないっていう事情があって
2972720	2975720	変えられないけどこのツールを通せば
2975720	2979720	一旦その影響範囲をこの範囲で抑えられるっていう
2979720	2983720	確かに
2983720	2986720	それができるんだったらかなりいいですね
2986720	2990720	レガシーとかだとURTじゃないか
2990720	2995720	RS-232C通信とかしか使ってないレガシーアプリとか結構あると思うんですけど
2995720	2997720	コンプを取る用みたいな
2997720	3001720	そこにしか権限を渡されてなかったら結構セキュアになる気がするな
3001720	3005720	確かに
3005720	3012720	そう考えると結構影響が出る範囲が広いんですね
3012720	3019720	ということでちょっと注目の技術なので知っておいた方がいいかなと思いました
3019720	3021720	今日はこんなところですかね
3043720	3045720	お疲れ様でした
3045720	3047720	はいお疲れ様でした
