WEBVTT

00:00.000 --> 00:06.440
はいどうも心川美です 東電です今週も1週間振り返っていきたいと思います

00:06.440 --> 00:11.600
はいはい 今週一番大きかったネタはツイッターの買収ですかね

00:11.600 --> 00:21.880
まあそうですねツイッター界隈すごくざわついてますねという そうですねメインメディアが我々としてはツイッターなのでもうツイッターに騒がれると

00:21.880 --> 00:27.320
それしか入ってこないっていう 悲しい状態になってしまいますけど

00:27.320 --> 00:36.600
まあどうなんですかねまあイーロンさんが買収しますつってしかも 従業員をなんか大量解雇半分以上解雇した

00:36.600 --> 00:48.760
みたいなところがあってまぁ大激震が走っているという感じですけど そうですね日本だと広告関係の人が全員解雇になったとか

00:48.760 --> 00:57.880
そんな話が出てましたね まあ今までとやっぱりマネタイズの方向とかいろいろ変えたいっていう話なん

00:57.880 --> 00:59.960
でしょうね うん

00:59.960 --> 01:09.280
なのでまぁ一旦リセットしてリセット まあインフラを引き続けてリセットしてまああのイーロンさんのやりたいようにもう一回

01:09.280 --> 01:18.520
ビルドし直すという感じなんでしょうね そうですねあとはツイッターとしてそのマネタイズモデルのスケールに比べて

01:18.520 --> 01:25.280
エンジニアのスケールがあまり伸びてないっていうところがあったんじゃないですかね イーロンさん的に

01:25.280 --> 01:34.960
あーえっとというと何人が多すぎるという話 そうそうそう出している商品サービスの規模に比べて抱えている

01:34.960 --> 01:38.640
いろんな エンジニアだったりまあ

01:38.640 --> 01:43.080
労働者か社員が多すぎる あーなるほどね

01:43.080 --> 01:53.240
まあ確かにそれはそうな気もするなぁ 今までのツイッターって結構そのマネタイズモデルが広告を出してもらってそれで

01:53.240 --> 01:58.520
お金をゲットするって感じだったと思うんですけど まあ確かにそれだと

01:58.520 --> 02:05.560
各広告会社広告会社というか広告を出したい会社ごとに接種が必要なはずで うん

02:05.560 --> 02:14.400
まああまりコストパフォーマンス良くないという気はしていますねそういう意味でと まあなので今騒がれている本当かどうかわかんないですけど

02:14.400 --> 02:21.320
もうでもアメリカでは始まっているらしいですけどツイッターブルーっていう 有料というか

02:21.320 --> 02:27.360
なんだ サブスクモデル7ドルだか8ドルだかって話ですけどあれだと

02:27.360 --> 02:34.520
まあユーザーがあのまあカードとかで払ってクレジットカードとかで払ってくれれば

02:34.520 --> 02:43.360
まあクレジットカード会社経営で一括で手に入るんでまあ そういう意味では広告広告とか営業がだいぶ圧縮できる

02:43.360 --> 02:50.920
というのは実際そんな気がしますねうん あれはもともと公認マークっていう位置づけでえっと

02:50.920 --> 02:59.320
まあ全くその不透明な仕組みではあったんだけれどもその私がこのアカウントの 本人ですということを宣誓したら

02:59.320 --> 03:08.520
バッジがつくみたいなものでしたとただその審査基準が結構不透明で明らかに有名な 人でも通らなかったりとか

03:08.520 --> 03:19.040
逆に全然知名度ないけどポンと通ったりとかでもう基準が全然よくわからないと まあ最初の頃にやってたら取れてるみたいなこともあったりして

03:19.040 --> 03:25.040
まあ なんだろうあのバッジの価値っていうのが全然高まってなかった

03:25.040 --> 03:32.240
はいっていう中でも ガラッとそのバッジの意味を変えたっていうことですね

03:32.240 --> 03:38.240
あのそうですね意味合いとしてはもうほぼボットではありませんくらいのイメージ になった

03:38.240 --> 03:44.600
まあボットではありませんまあどちらかというと有料ユーザーですなのかなと個人的に 思いますよね

03:44.600 --> 03:55.000
まあボットもぶっちゃけ買えるとは思うんですよ あのボットの管理者が支払えばまあまあそうですねまあただ

03:55.000 --> 04:02.920
それでボット判定をくらったら多分8ドルで募集されるんで 周りに合わんなという感じで

04:02.920 --> 04:07.720
業者としてのボットは 結構

04:07.720 --> 04:14.520
バッジを持ってなければ こいつはまあボットとなって判定をくらいやすくなるうん

04:14.520 --> 04:20.160
という意味ではあるかもしれないですねそうですね あとはまあ

04:20.160 --> 04:26.480
もう本当にお金出してでもやりたい あの攻撃的なアカウントしか残らなくなるかな

04:26.480 --> 04:32.000
誘拐犯とかいたずらレベルの そうじゃなくなってくるのでまぁ

04:32.000 --> 04:38.920
ユーチューバーとか有名な人あるあるですけど あの同性同盟のアカウントが乱立している問題ですね

04:38.920 --> 04:48.280
とかもちょっとは抑えられるかもしれないですね そうですねまあそこら辺はいいかもしれないですね

04:48.280 --> 04:56.920
まあその企業アカウントまあユーチューバーは企業は非企業言いますけど その何ですかえーっと

04:56.920 --> 05:03.200
仕事としてやるレベルだったら別に8ドルぐらいいいと思うんですけど まあただそういう意味で言うと

05:03.200 --> 05:13.840
個人で使用しているけどある程度著名な人 に対してまあ8ドル払うかって言われてちょっとうーんという感じもあり

05:13.840 --> 05:18.720
のというところが 結構微妙なラインかなぁとは思っていますね

05:18.720 --> 05:29.320
そうですねまあそういう人もツイッターを通じて個人のなんだろうな 8価値っていうのは発信したいと思っているんであれば

05:29.320 --> 05:38.000
ツイッターのプラットフォームを正しく利用したい人だから有料ユーザーになって くださいねって言うことがそんなに悪くはないかな

05:38.000 --> 05:41.720
まあ確かにそれもそうか あの

05:41.720 --> 05:52.520
そうですね youtube でえーっとそれなりに高再生数がある人はお金払って ちゃんと管理してくださいっていうのと一緒と言われれればそれはそうですね

05:52.520 --> 05:56.240
という感じそうそう

05:56.240 --> 06:06.280
まあ itk のね第一人者とかでツイッターでいろんな テック的なことを発信している人だったりとか各会社の公式アカウントだったり

06:06.280 --> 06:11.520
とか まあいろいろその発信することで8

06:11.520 --> 06:18.680
周囲に事項 実行価値を提供している人たちは

06:18.680 --> 06:24.920
やっぱり この8ドル払う価値があると思って利用してるんじゃないですかねツイッターを

06:24.920 --> 06:31.080
まあそうですね まあ確かに特に企業アカウントとかはそうだと思うんで

06:31.080 --> 06:37.280
まあそこらへんは必要経費だなと まあいいいいんじゃないですかそういう意味では

06:37.280 --> 06:45.240
はい私も基本的には賛成ですね もちろん中の人はねだいぶ引っ掛け回されていると思うんで

06:45.240 --> 06:50.320
困ったっていうのはいっぱいあると思いますけど まあなんか

06:50.320 --> 07:02.560
まあ日本支部は置いといても本社の方が訴訟してまでこう イーロンさんに買ってもらってその結果社員が大量解雇されるってでもなんか

07:02.560 --> 07:11.760
どこに落ち着きたかったんやっていうところがすごいありますけど まあまあ現状でも買ってるんでねはい

07:11.760 --> 07:21.000
もはや何も言えないと思いますけど まあ今後の期待としては結構イーロンさんの持ってた各会社っていうのは

07:21.000 --> 07:29.200
その技術でぶん殴る系の会社が多いじゃないですか その営業力とか広告力とかその

07:29.200 --> 07:34.400
何だろうないろんなところと提携してだったり政府に認めさせたりみたいなその 社会的

07:34.400 --> 07:46.840
セッションを積み重ねてって受け入れられるようになって提供するっていうよりかは こんな技術でできるようになったんだぞお前らすげーだろうっていうその技術で

07:46.840 --> 07:53.680
ぶん殴る系だったので twitter がそういう方向に変わってくれるとちょっと sns としてまた

07:53.680 --> 08:01.520
ひとかを向けた何かが出てくるかもなーって期待感はありますかね まあ確かにそうですね

08:01.520 --> 08:10.400
まあ確かにそういう意味では その sns としてもはやインフラ化していてまあアメリカの選挙も今度ありますけども

08:10.400 --> 08:19.120
まあそこらへんにも影響を及ぼすという言われているレベルになっているんで まあそこの問題点を技術で解決する sns ですという

08:19.120 --> 08:24.960
まあ価値提供は絶対まあお出しできると思うなんでね うん

08:24.960 --> 08:31.240
まあそうなってくれと嬉しいかなというところですねはい じゃあ枕としてはそんなもんですかね

08:31.240 --> 08:41.000
はーいじゃあ本題の方行きたいとおもいます 1点目オープン ssl の脆弱性対策についてということで ipa

08:41.000 --> 08:49.680
情報処理推進機構の記事です オープン ssl は ssl および tls の機能を提供するオープンソースのライブラリーです

08:49.680 --> 08:59.840
このオープン ssl において x 10509 証明書の検証処理を通じてバッハオーバーフローが発生する脆弱性が確認されています

08:59.840 --> 09:10.800
本体弱性が悪用されると攻撃者が用意した悪意ある証明書によりオーバーフローが起き起こされ 結果としてサービス運用妨害や遠隔からのコード実行を行われる可能性があります

09:10.800 --> 09:17.240
今後被害が拡大する可能性があるため早急に対策を実施してください ということで

09:17.240 --> 09:29.400
あの世界中でありとあらゆる場所で使われている オープン ssl の脆弱性が見つかったぞということで一時期ものすごくホットになった話です

09:29.400 --> 09:40.760
で今はかなり鎮下していますそれの経緯とかを少し話したいんですけど まずオープン ssl についてですが今話したとおりで

09:40.760 --> 09:49.520
はあるんですが ssl tls の機能実現で使われているライブラリーですともっとあの 広く言うと

09:49.520 --> 09:57.400
皆さんが web ブラウザー chrome とかエッジとかまあそういったところでホームページにアクセスしたり するときに使われている

09:57.400 --> 10:05.480
https というプロトコルではネット証明書を通じたセキュリティ認証っていうのが行われて いるんですけど

10:05.480 --> 10:16.840
その証明書を使うにあたってその証明書を発行したりとか その証明書の中身を検証したりということを行っているライブラリーになります

10:16.840 --> 10:24.520
ねえとオープン ssl 以外にももちろんいろんなそういう証明書検証のものはあるんです けれども

10:24.520 --> 10:37.360
a オープン ssl のオープンというところから無料で使えるということがあるので えっといろんなところで手軽に証明書運用を始められる

10:37.360 --> 10:47.760
っていう価値がこのオープンソースのライブラリーにあり あらゆる人が活用してきたということですね歴史も結構長くて

10:47.760 --> 10:59.760
それこそ ssl tls とかそういったものが開発され世の中に提唱され出して以降 すぐさま登場してリナックスベースのサーバー環境ですとか

10:59.760 --> 11:07.440
まあえっとオンプレの短い範囲の ライブラリーだったりとかまあそういった環境

11:07.440 --> 11:19.120
とは本当に証明書とかセキュリティ専門ではない 市企業の出す商品で https とかセキュリティ対応するとなった場合にもよく登場していた

11:19.120 --> 11:31.000
ライブラリーですということで非常に多くの範囲に影響し得るものでした で結果的にヘイト今進化している大きな要因としては

11:31.000 --> 11:42.160
ヘイト対象となるその脆弱性が見つかったバージョンというのが オープン ssl 3.0.0 以降から3.0.6までの間

11:42.160 --> 11:50.520
の8バージョンになりますと でこれらのバージョンというのがもうかなり最新のものになっていまして

11:50.520 --> 12:01.040
8オープン ssl 自体はかなり昔の1.1.1 で十分ほとんどの機能が含まれていてそれ以降の

12:01.040 --> 12:10.680
8バージョンを使う理由というのがよっぽど特殊なことをしない限りなかなか出てこない ということで標準インストールされるものはだいたい1.1.1だったりとか

12:10.680 --> 12:18.200
1.0.2という古いものがインストールされることがほとんどでしたと ということで

12:18.200 --> 12:24.880
とこのニュースを受けていろんな会社さんで調査をされましたが

12:24.880 --> 12:34.680
あんまりその子の対策についてうちはこうやりましたとか 水いつまでにアップデートかけますみたいな話が全然出回らないのはほとんどがこの

12:34.680 --> 12:45.320
古いって1.1.1とか 2.0.2が使われているという事情からあまり大きくはならなかったというところになります

12:45.320 --> 12:51.720
はい ただこれが本当にねえっと全体に及んでいたら今頃

12:51.720 --> 13:02.560
これ自体は11月2日の話で 8ニュースが出ていますが今になってでも相当大騒ぎしていた致命的な話で

13:02.560 --> 13:09.840
えっとセキュリティ関係のライブラリーでセキュリこのライブラリーを使ってえっと セキュリティ田んぼできてますが

13:09.840 --> 13:19.040
証明書がチェックできてますって言い切ってたそのインターネットの世界だったので ここに致命的な脆弱性が含まれているとなった場合は

13:19.040 --> 13:29.840
全世界のあらゆるセキュリティを見直すという話になり 経済損失いくらで水漏れはいいのかわからないような大事故というところや

13:29.840 --> 13:35.640
あわやなりかねない話だったので紹介ですというところですね はい

13:35.640 --> 13:45.080
はいん いやまああの1.1点いくらを使っている人はまあ問題なかったということでまあまあまあ

13:45.080 --> 13:57.920
まだマシだったという話だと思いますけどはいうーんまあそうはいつつも まあ仕方がないどう気づかなかったんで仕方がないのは仕方がないですけど

13:57.920 --> 14:08.840
難しいですね経済性の話になってしまうとと思っていますというところで難しいですね っていうのは8まあ前回なんか似たような話があった時にもあったんですけど

14:08.840 --> 14:16.600
オープンソース系だと 誰も責任を取れないんですよねそうですねまあそれがいいところでもあり

14:16.600 --> 14:23.440
その分そのパッチが当たる速度というか8コーチ 能力によって

14:23.440 --> 14:32.520
8その なんだマンパワーで完成度を高めるという方針なのでまあそれはそれでいいんですけど

14:32.520 --> 14:39.920
うーんその実際こう問題になった時に じゃあどうどうなんていうのかな

14:39.920 --> 14:44.360
自社製品に適応しました まあ

14:44.360 --> 14:54.120
それでコストん 全然追っかかりましたとかいう話になった時にまあ自分の身を切るしかないと

14:54.120 --> 15:00.240
いうところが あるのがもうどうしようもないかなというところですね

15:00.240 --> 15:03.000
そうですね

15:03.680 --> 15:12.560
まあその辺は やっぱりソフトウェアを外製品に頼っているリスクって話ですね

15:12.560 --> 15:21.560
ですねまあでもまあ前回も言いましたけど前の時も言いましたけど まあそうしないとでもえっと

15:21.560 --> 15:30.200
競争性のある商品にならないコストがかかりすぎる っていう話であったと思うのでまあ仕方がないと言えば仕方がない

15:30.200 --> 15:37.880
なので まあ1エンジニアとしてできるのはこういうことがなった時になんとか

15:37.880 --> 15:46.920
パッチを当てられる その環境を整えておく必要があるのですねという感じなんですけども

15:46.920 --> 15:55.960
まあでもそれも難しいんかなどういうパッチの当て方すればいいかわからみたいなの がいっぱいあると思うんでそうですね結局

15:55.960 --> 16:01.560
あのバージョンってこの問題以外についてもいろいろ上がってるからバージョンアップなので あって

16:01.560 --> 16:12.520
いや自分たちのシステムに対してそれらの他の変更っていうのが問題にならないのか どうかの検証が必要になってしまうのでなかなか大事ですね

16:12.520 --> 16:19.520
まあでも検証もなぁ オープンソースだから大丈夫って使わざるを得ない

16:19.520 --> 16:26.520
だったら検証も できねえできねえというかコストに見合わないでしょうっていうのが正直なところだと思います

16:26.520 --> 16:32.160
けどそうですね まあそれで納得できる

16:32.160 --> 16:42.200
顧客がいてくれればって感じだな まあこういう問題があって一番困るのはやっぱりエンジニアではないけれどもこの問題に

16:42.200 --> 16:52.200
ついてお金を払った人にどうやって説明するかなんですよね 社内で引き取るんだったら多分経営層とかに説明しなきゃいけないんですけど

16:52.200 --> 17:01.400
この問題が発生しましたとでこれは外部のオープンなライブラリを使っていてその ライブラリーのアップデートに不具合がありましたと

17:01.400 --> 17:08.240
で最新版では対応できているのでアップデートをかけます アップデート後の動作検証

17:08.240 --> 17:17.000
はえっと基本的に その幕の修正が本家で行われているはずのでえっと私たちは

17:17.000 --> 17:25.760
3見れないし見ること見る必要もありません でその今回発生した問題っていうのはまあ

17:25.760 --> 17:34.880
この例だけで言えばバッハオーバーフローとか例外的な処理なので通常の処理には影響 がありませんっていう説明をするわけですけど

17:34.880 --> 17:41.520
技術的には正しくでも多分経営層的には まあ

17:41.520 --> 17:48.960
想定外の趣旨が出費が大きすぎるので まあ再発防止策なり何なり

17:48.960 --> 18:00.520
少なくともそのり発生リスクに対して事前に動ける体制だったりとか何か 工事とかないと次これが来たらやばいなっていうので何か指示を出したいっていう

18:00.520 --> 18:03.720
モチベーションになるはずなんで

18:03.720 --> 18:15.240
そこが正しくあのハンドリングできなくてなんか意味のない対策 だけ生まれていっちゃうっていうのが辛いところですかね

18:15.240 --> 18:25.760
まあよくある話ですねという感じですけどまぁでもそう言ってしまうと他の業務も 変わんないなという感じがするまあそうなんですけどね

18:25.760 --> 18:34.960
要は外から買ってきたものでちゃんと納入検査して納品されたはずなんですけど実は 不具合がありました

18:34.960 --> 18:44.000
そうじゃあそれでもあの市場に出しちゃったんで回収するかしないかまあいろいろ対策 あると思いますけど対策必要です

18:44.000 --> 18:53.920
でやっぱそれと結局一緒じゃないですかという話でそう それでまあ自社としてはこういう対策を取りましたっていうのが

18:53.920 --> 19:00.840
まあ意味のない無駄にコストがかかる対策チェックしてみたいなものになるかどうか っていうのはまあ

19:00.840 --> 19:06.800
これオープンソースを使っているが使ってなかろうがまあ発生していることなんで

19:07.000 --> 19:16.800
そういう意味では自社としてはまあ そうか結局変わらんかなっていう

19:16.800 --> 19:25.160
気がしてきましたね 原因が自責じゃないんだけど大概的には自責として表出させなきゃいけない問題

19:25.160 --> 19:27.640
なんですよね

19:28.240 --> 19:35.040
まあなんで自社としてはやはり あれですねさっき言った通り

19:35.040 --> 19:39.320
その 何かあった時に巻き取れる

19:39.320 --> 19:47.720
あの手元で巻き取れる範囲で巻き取れるようにしておく というのを仕込んでおくというのがやはり

19:47.720 --> 19:54.320
まあ制作段階でそれを意識しておくというのが必要かなというところですね

19:55.000 --> 20:01.960
まあどうなんですかねでもここらへん そう言ってられないようなところまで

20:01.960 --> 20:09.200
組み込まれちゃってるんじゃないっていうところがありそうな気もしますけど おっしゃる通りえーっと

20:09.200 --> 20:19.520
こんなオープンSSLになるともうすごく当たり前レベル なんならそのOSI参照レベルの下の方とか言っても不思議じゃないくらい

20:19.520 --> 20:29.400
普段全く意識しないレイヤーの概念の話になってきちゃうので あのどこに入ってるかなんて

20:29.400 --> 20:40.200
多分設計にも表出一切しないです で仮にセキュリティリスクシートこういうことが起こり得ますみたいなリスクシートを

20:40.200 --> 20:47.040
設計段階で行ってたとしてもこんな話は登場しないと思います

20:47.480 --> 20:55.000
まあなので実際の納入したものにどこまで入ってるかわかんないみたいなことになっちゃうと

20:55.000 --> 21:04.440
そうかなりあれですねあのコストかけて足をかけて ちょっと現場に見に行くみたいなことにしないといけなくなる

21:04.440 --> 21:09.360
かなぁというところですね なかなか大変やなぁ

21:10.920 --> 21:19.680
まあそういう意味ではそこが再発防止策なのかもしれないですね今後の ちょっとちゃんと手元に残しておく

21:19.680 --> 21:33.840
ある意味ではここを突き詰めていくとFAとかそういった世界の仕掛けみたいなのを再導入する話もあるといえばあって

21:33.840 --> 21:45.800
今はSボムっていう言葉が出始めていて ボムは部品のリストの話ですねでSはソフトウェアでソフトウェアボム

21:45.800 --> 21:57.000
自分たちが使っているソフトウェア部品を全部釣り場にして見える化しましょうと でそれらの部品のどこに課題があったらどうしますかっていうのをハンドリングできる

21:57.000 --> 21:59.480
にするもの

21:59.560 --> 22:10.840
で今までリアルで行われていたボムで言えば例えばある部品のロット 不具合とかがあって

22:10.840 --> 22:22.120
それって1年に1回とか1年に1回も起きないか5年に1回とかそんなレベルでしか起きないけど まあそれが起きたら大体部品どうするんだとかそのロットの回収どうするんだとか

22:22.120 --> 22:28.240
一応動ける体制を組んで商品リリースしていると思うんですよ

22:28.800 --> 22:37.080
なのでそれと同じような仕掛けをこのソフトウェア開発セキュリティ対策にも持ってこれ ないかっていう議論はされてたりしますね

22:37.080 --> 22:45.080
まあいいですねそこらへんやっとくべきな気がしますね 確かにこういうことが起こるね

22:46.640 --> 22:52.080
まあまあ 皆さん気をつけましょうというところなんですけど最後に1点だけ

22:52.080 --> 22:58.440
えっと今回あの古いバージョンだったから大丈夫でしたって話をした通りですね 8

22:58.440 --> 23:11.800
バージョンを上げればとりあえずいいっていうものとバージョンは上げない安定はを使う べきものっていうのがソフトウェア上混在することになるのでその

23:11.800 --> 23:18.560
なんだろうな it を学び始めた人あるあるなんですがとりあえず最新にしとけばいいっていう ような

23:18.560 --> 23:30.360
あの安易なアクションっていうのをセキュリティに持ち込まない方がいいですっていう ことですかねまあでもそこも難しいですよねあのなんかこう機能拡張しようと思った時に

23:30.360 --> 23:37.640
やっぱ最新バージョンだめだよねって言って えっとリビルドのコストがかかるとかいうともあったりしそうだなとか思っちゃうと

23:37.640 --> 23:44.120
最新版を使いたくなるとか そうであるとおきますけどまあそれを考えるんであれば安定版

23:44.120 --> 23:56.000
しかもこれバージョン3枚出ててバージョン1が安定版なのですとかいう話なんでそうそう なんかこうメジャーバージョンアップだったらメジャーバージョン使っとくかみたいなところになり

23:56.000 --> 24:04.600
そうですけど まあその感覚の方が多分自然で1.1.1今回当たり前に使われているそれが普及してたって話し

24:04.600 --> 24:08.440
しましたけどこれのリリース タイミングはかなり前なので

24:08.440 --> 24:14.920
はい その何も知らない人が新しくオープンsslのバージョンを選定するという作業を行った場合に

24:14.920 --> 24:21.400
1.1.1を正しく選べるかというとかなり怪異的ですね

24:21.760 --> 24:35.360
まあでそそこが技術力になるかもしれないですけどなんで内部仕様まで把握した上で 安定版はどう実績がのこれですって選べるならいいですけどというところ

24:35.360 --> 24:43.680
まあ そういうことって結構学べるタイミングが少ないので難しいなと思いますね

24:43.680 --> 24:49.240
下手にじゃあ安定版ですってやっなんていうのかな あの

24:49.240 --> 24:56.400
部内の指示みたいなのをまあサクッと出してしまうと何も考えずずっと言って 0.0みたいのを使い続けていって

24:56.400 --> 25:03.600
そうですねでなんかこうキャッチアップできないみたいなね 将来的にリスクになり得るからそろそろ交換しようみたいな

25:03.600 --> 25:11.840
そうところにキャッチアップできなくてなんかセキュリティリスクになるみたいな eol リスクであるんですよね

25:11.840 --> 25:23.280
もうそのメジャーバージョンはすごく安定版だったけどサポートしませんっていう そこに新しい脆弱性が含まれたとしてももう知りませんよっていうことに

25:23.280 --> 25:33.280
どっかのタイミングでなるので安定版にしがみつき続けるのもおっしゃる通り 開発上懸念があるんですよね懸念があるはあるですけど

25:33.280 --> 25:44.200
まあなんで製品の寿命と関していろいろがいつ出るかわからんしなみたいなのも ありつつのっていうのもありますし難しいなはい

25:44.200 --> 25:52.360
はいというところで皆さんお気をつけくださいはい 次私の方から

25:52.360 --> 26:01.160
ついにライトニングが廃止アップル幹部が iphone の usb c 搭載発表という 旅ラバさんのまあ記事になります

26:01.160 --> 26:09.360
iphone の usb タイプ c かっこ usb c コンデックンダーの搭載は多くのユーザーから 長年待ち望まれていたものの

26:09.360 --> 26:18.640
同社オリジナル規格のライトニングの継続を押し通してきたところが先日 ついに幹部が新型iphone に usb c を搭載する方針を発表

26:18.640 --> 26:26.760
ということでまあ なんてですかねまあ前回どっかでこのラジオでも1回紹介しましたけど

26:26.760 --> 26:36.840
えっと eu の企画で a まあ 携帯の携帯携帯だけじゃないかあのライトニング

26:36.840 --> 26:47.960
ライトニングやめて usb c に統一しましょうというのが eu での企画としてお勧められていてそれが可決されましたと

26:47.960 --> 26:57.400
いうことがあるんで次に発表される iphone はさすがに usb c になるでしょうと いうことが紹介されていますと

26:57.400 --> 27:08.600
でまぁこれもなんですかねこれも前回話しましたけど技術的には まあ残ってもいいような気もするけど個別的には

27:08.600 --> 27:17.800
あの めんどくさい限りなのでまあ usb タイプ c にしてくれた方が嬉しいなという話ですねという感じで

27:17.800 --> 27:20.280
ありますね

27:22.080 --> 27:33.320
いやーまああの流れとして理解はできるんですけどそもそも eu の方針にあまり賛同してないっていう点ともう一つ

27:33.320 --> 27:39.360
usb タイプ c にも企画が乱立しまくっているので あの

27:39.360 --> 27:48.760
統一されたことによって逆にユーザーは不幸になってないのかっていう懸念があります ね技術的にはそうなんですよね

27:48.760 --> 27:56.280
通信だけならまだしも通信速度とかねパワーデリバリーあの電源 充電するための供給電力量

27:56.280 --> 28:05.640
まあ早く充電できる企画みたいながなんかいつの間にかいろいろできてるみたいな 感じになっていてそうまあそれのどこまで対応しているのかっていうのをしっかり

28:05.640 --> 28:13.040
把握した上でこれ ケーブルを使っておかないと充電器とケーブルと端末全部企画があってないと

28:13.040 --> 28:21.240
8端末はすごくいい企画に対応してるけど実は充電がゆっくりなっちゃってるとかいうのか 全然あり得るのでね

28:21.240 --> 28:28.760
確かケーブル長とかも企画で決まってましたよね 高速通信の場合1メートルまでとか

28:28.760 --> 28:37.040
利便性考えてね適当に2メートルのやつとかみんな買いまくってると思うんで 実質

28:37.040 --> 28:48.200
端末メーカーがもう頑張る気力がなくなってしまうというかその usb タイプ c の フルスペックを生かそうっていうモチベーションがわからない

28:48.200 --> 28:54.120
まあ あってしまう気がするから

28:55.160 --> 29:04.440
で今回の eu の話っていうのはみんな usb タイプ c になることでその商品に usb タイプ c を付属しなくても良くなり

29:04.440 --> 29:15.800
8いろんな機器を同じ usb タイプ c ケーブルでまかなえるようになることから で社会全体として資源の節約になるって話だったと思うんですけど

29:15.800 --> 29:18.840
はい その

29:18.840 --> 29:32.680
自社の製品を最大限生かそうとして usb の最新企画に対応しようとすると 8ケーブルが共有化されている以上はその価値を生かせないし

29:32.680 --> 29:39.040
生かしてもらおうと思うと結局ケーブルを付属するしかない みたいになるから

29:39.040 --> 29:49.680
なんか あんまり良い解決策になってないですよね まあそのお題目としての資源の節約に対してはベストアンサーではないというのは

29:49.680 --> 29:56.120
それはそう なのでどちらかというと本音として

29:56.120 --> 30:02.640
ライトニングがめんどくさいっていう 店員だけに対する回答

30:02.640 --> 30:13.680
としてはアリだと思っていますというところかなぁ 今回はすべての電化製品に対して usb ca の対応義務化するってことなん

30:13.680 --> 30:18.560
ではい ちょっとちょっと

30:18.560 --> 30:27.800
どうかなぁとは思いますがまあ iphone ユーザー 単体で見ればいいことなんじゃないですかねその ipad とかも

30:27.800 --> 30:34.600
usb タイプ c 移行してたりとかしてたと思うんで はい

30:34.880 --> 30:43.600
まあそうですよねえっと後まあ そういう意味ではその ipad とかに付属しているタイプ c の充電器

30:43.600 --> 30:51.040
確か付属していると思いますけどそういうのを使えば問題はないかなというところ なんでそれはいいんですけど

30:51.040 --> 30:58.880
あとは現行のタイプ a の a to タイプ c の問題ですね はい

30:58.880 --> 31:07.720
タイプ a が充電器側についているものは皆さんいっぱい持っていると思いますけど あれパワーデリバリー企画がないので実際ところ

31:07.720 --> 31:12.320
8ワット数が実はそんなに流せないと なると

31:12.320 --> 31:21.320
えっと猫むしゃくしもタイプ c つってノートパソコンとか割れで充電しようと するとすごく時間かかるなんか知らんけど使いづらいなぁというかまぁこれも

31:21.320 --> 31:30.880
クリックがわからんまま不幸になる状態がまあ多発そうやなぁというところ でそうで解決策としてはいい

31:30.880 --> 31:38.920
あの電源 エーシーアダプターのタイプ c のついているやつをちゃんと変えましょうという話なんです

31:38.920 --> 31:44.800
けど まあそれもそのお題目からする資源の節約になってないなと

31:44.800 --> 31:52.240
正直思わざるを得ないなというところがあるんでなんだかなぁという話なんです けど

31:52.240 --> 31:58.040
そう あの usba usb c 変換問題はもう

31:58.040 --> 32:05.600
なんだろうな技術リティラシーのないあらゆる人を不幸にしているとしか思えないです よねあれはまあそうでしょうねまあ

32:05.600 --> 32:15.400
ただ usba でそんなはトスを上げたやつをじゃあ発売するのかって言ってもそれも それでいろいろ問題になりそうですし

32:15.400 --> 32:22.480
そうですねだからアンカーとか最近なしているの全部タイプ c タイプ c そのタイプ c タイプ c になっているんで

32:22.480 --> 32:31.600
まああの まあ今後エーシーアダプターというかその充電するためのケーブルを買うときは全部タイプ

32:31.600 --> 32:40.080
c に統一したほうがいいですよねというのをちゃんと周知する必要があるかなという 気はしていますね

32:40.080 --> 32:49.680
誰がするんだろう誰がするんだって感じなんですけどもそこも含めて eu もし 進めればいいのにという気もしますけど充電器はそうだねーしにするって

32:49.680 --> 33:05.320
そうだねところが変化製品って言ってる時に電源側について言及してくれてるとね いいんだけどまああと usb c 高いんですよね正直な話っていうのがまあメーカー側と

33:05.320 --> 33:13.240
してはあるんですけども まあまあその企画に対応したりその充電する前に給電する前に通信したりするんでそれの

33:13.240 --> 33:17.960
専用チップが必要だったりとか いろいろなって高くてえーっとなんか

33:17.960 --> 33:25.720
日な業種だと未だにマイクロ b を使ってたりするとかもあるんですけども まあ

33:25.720 --> 33:35.840
そこらへんもね正直マイクロ b 使うぐらいならタイプ c 使ってほしいなというところがあるので そこも頑張って何か

33:35.840 --> 33:41.160
統一した方が本当はいいんだろうなという気はしますね

33:41.160 --> 33:54.880
まあそういう意味でも多分 usb 系列 usb という名前を勘した奴っていうのは結構 限界点が近いというか乱立しすぎてるからもうちょっと

33:54.880 --> 33:59.760
やっぱり ユーザー目線に立ったら何でもかんでも

33:59.760 --> 34:11.720
がちゃんこしてっていうのをやめとこうっていう方針がもう1回ね来ても不思議では ないんでそうですねそれのなんか邪魔をしないといいなと思うんですけどね

34:11.720 --> 34:20.720
この eu の企画が企画であるか法律が まあそのそうですね全部 usb シーンしようという圧力が高まったんで usb c で

34:20.720 --> 34:29.880
何かこう落ち着く感じになっちゃってて 形状は一緒だけど古いものから出したものからあって難しいなっていう状況

34:29.880 --> 34:37.480
そう 今ディスプレイ系も usb タイプ c でできるようになってますけど当たり前ですけど hdmi と

34:37.480 --> 34:46.880
がディスプレイポートの通信速度ほどは出てないと思いますし それ

34:46.880 --> 34:59.320
そのまま行くと多分ディスプレイの何でしょうね解像度とかがあったり あとは gpu との連携性というところで限界がやってきちゃうと思う

34:59.840 --> 35:10.120
まあそうですねまあでも 日本ユーザーはぶっちゃけ usb c のいい企画が乗ってれば通信問題ない気がしますけどね

35:10.120 --> 35:12.840
まあそこらへんは

35:12.840 --> 35:19.520
十分なのかなちょっとあまり覚えてないですけど 4k ぐらい行けたじゃなかったかな

35:19.520 --> 35:32.240
いい企画だと思ってますちょっと適当ですけど後でちょっと確認しますけど なるほどなのでまあまあそれもやっぱりまあ結果行ってしまうと

35:32.240 --> 35:38.520
その ちゃんとしたケーブルを選ばないと4型うつらななんか解像度悪いなって状態で使う

35:38.520 --> 35:46.000
ことになってしまうんですけど まあでも今 hdmi の話も出ちゃいましたけどまぁそれを言ってしまうと全部それは

35:46.000 --> 35:50.640
そうって話で まあランケーブルは

35:50.640 --> 35:58.680
それこそ一般人はあんまり気にせず使えてますけど ランケーブルも古い企画は一応100メガまでしか通らないとか

35:58.680 --> 36:07.160
カテゴリーとかいっぱいありますかありますし hdmi も 売れ企画めちゃくちゃ古いものを使っている4型対応しなくて

36:07.160 --> 36:13.240
うんあの まあなんかしょぼいディスペンス投げるんだったらいいですけどみたいな状況になったり

36:13.240 --> 36:18.000
とか ハイラズパイ付属の hdmi ケーブルで4型うつらないですからね

36:18.000 --> 36:20.440
そうそう

36:20.920 --> 36:29.440
ハードウェアスペック上やばいねそれって思いますけどまあまあいいや なのでケーブル問題まあそう言ってしまうと至るところにあって問題ないのは

36:29.440 --> 36:37.280
本当 エシー100ボルトぐらいじゃねって言う気がするけどねそうだなぁそれも国またぐとダメだけどまあね

36:37.280 --> 36:46.000
まあそういう意味では そういう意味ではもう仕方がないかなって思って決めちゃいますね

36:46.000 --> 36:57.800
なるほどねまあさっきととおり問題なのは企画が乱立しすぎているってことなので あとはもうなんか業界団体の努力によって

36:57.800 --> 37:05.800
まあなんだろう まあ3.1の次は4.1にするみたいな感じで

37:05.800 --> 37:10.960
微妙に3.2を使わないとかいう選択肢 みたいな

37:10.960 --> 37:19.320
感じでステップを何か あまり刻まないぐらいでやってくれるとありがたいなぁというところ

37:19.320 --> 37:23.280
ですかねそうですね

37:23.280 --> 37:30.120
あとはケーブル側とかもちゃんと企画を決めていってほしいなぁ あの

37:30.120 --> 37:37.280
今 ランケーブルとかだったらまあ一応ケーブルにカテゴリーとか書いてあって

37:37.280 --> 37:42.960
見分けがつくようになってるじゃないですか でも usb ケーブルってその義務がないですよね

37:42.960 --> 37:50.160
はいないですね なんでその辺だったらと端子の口だったりとかでちょっと

37:50.160 --> 37:58.520
これとこれが適応するのかくらいはまあ 見分けようと思ったらできるっていう状態は作ってほしいなと思いますけど

37:58.520 --> 38:06.480
そうですね確かになんか結局はほぼすべての usb あの手持ち部分に usb マークつける

38:06.480 --> 38:14.920
スペースぐらいはあるんであそこに4と4 4.1と書くみたいだねそのくらいはやってほしい気がしますね

38:14.920 --> 38:18.000
ねうん

38:18.000 --> 38:23.760
ん 姿がフラットのケーブルとか作りにくいじゃないかとか言われるんでしょうけど

38:23.760 --> 38:35.160
90度曲がるやつとかまあでもそれよりも変な企画で何か 商品に過剰なものが入ったりとかそういうことのリスクと比べたらまあいいかな

38:35.160 --> 38:39.920
って感じ 確かにそこをなんか

38:39.920 --> 38:47.960
これほど乱事するとは思わなかったのかハードウェアがで通信するからいいやに してしまったのがうどつきですねというところですね

38:47.960 --> 38:55.120
はいはい じゃあ次行きましょうかはい

38:55.480 --> 39:02.800
次 a タブパックウェブパックの正当光景ターボパックが登場ということで聞いたの

39:02.800 --> 39:10.960
の記事になります 8公式のブログ記事もあるんですけど英語なのでちょっと聞いたのも採用させて

39:10.960 --> 39:14.440
もらいます a

39:14.440 --> 39:24.000
イントロデューシングターボパックということで バーセルの氏名はイノベーターがひらめきを作るのにひらめき形作るのに必要なスピードと

39:24.000 --> 39:32.320
心霊性を提供することです 昨年我々はネクスト.js がアプリをバンドルするスピードを向上することに注力しました

39:32.320 --> 39:41.640
javascript ベースからラストベースのツールに移行するたびに如実に効果が現れました バベルからの移行ではトランスファイルの速度が17倍になりました

39:41.640 --> 39:49.560
ターソナの移行においてはミニフィーが6倍になりさらに 読み込み時間の短縮と待機の使用量まで削減できました

39:49.560 --> 39:57.320
残りの山は一つウェブパックですウェブパックこれまで30億回以上もダウンロードされており もはやウェブ構築には欠かせないツールとなっています

39:57.320 --> 40:06.800
しかしもっと早く持続ける可能ツールが必要な時がやってきました 本日は我々はウェブパックの正当光景ターボパックを発表しますということで

40:06.800 --> 40:11.960
えーと まあ今言った通りの話ではあるんですけれども

40:11.960 --> 40:23.600
web ページがより高速化されるようになってきましたよという話になります まずここで登場していたウェブパックとは何ぞやっていう話からするんですけど

40:23.600 --> 40:33.720
皆さんが web ブラウザーでホームページとかを見ている場合は インターネット上にあるサーバーからいろんなものをダウンロードしてきて必要なコンテンツが

40:33.720 --> 40:43.240
揃ったら表示するというような形で提供されています でこの必要なものっていうのをいかに早く提供するかっていうことにおいて

40:43.240 --> 40:55.240
そのブラウザ側の処理も含めて最適化っていうのが図られてきましたと まあ例えばファイル自体をより小さくするために圧縮技術を用いたりとか

40:55.240 --> 41:01.520
あとは余計なファイルサイズにならないように プログラミングコードだったり

41:01.520 --> 41:12.160
html の画面データを隙間なく詰めるようにしたり あとは冗長的な文章を最適化したりとか

41:12.160 --> 41:20.520
そういったことを駆使しながら 昔の組み込みバイナリーのような形でなるべく最小化し

41:20.520 --> 41:28.320
難読化し ブラウザが読みやすい形にして提供するということをしきりに行ってきましたと

41:28.320 --> 41:37.080
そういったところで登場していた技術がWebpackになりまして 最新の開発環境であるリアクトですとか

41:37.080 --> 41:42.680
ビューアンギュラーといった環境では このWebpackというものが後ろで動いて

41:42.680 --> 41:48.160
ビルド物 ビルド成果物ができてきてましたと

41:48.160 --> 41:54.480
それで提供されたものであれば非常に高速だよねということで 皆さん使ってきたんですけれども

41:54.480 --> 42:03.000
それでもまだまだ早くできる余地があったということで このTurboPackというのが登場してきたというものです

42:03.000 --> 42:12.280
このTurboPackとWebpackの間にもいろんな技術がこれまでもあって 先ほど登場したようなNext.jsですとか

42:12.280 --> 42:16.560
あとはBeatと言われるものですとか いろんな技術があったんですが

42:16.560 --> 42:25.160
以前のWebpackと言われる技術から比べると 約700倍の速度で動作するようになりましたと

42:25.160 --> 42:33.080
その中間のBeatと言われるものも これも1年前2年前くらいから入り始めたものなんですが

42:33.080 --> 42:38.720
それと比べても20倍の速度があるということで 圧倒的な速度を誇っています

42:38.720 --> 42:46.680
これくらいの速度が出ると もちろんWebコンテンツのリッチ化がしやすい

42:46.680 --> 42:54.920
今まで例えば100ms以内でホームページを表示できなければならない という要件が課されていた場合

42:54.920 --> 43:03.160
Webpackを使っていると700分の1のコンテンツ量に 抑えないと100ms以内に表示できなかった

43:03.160 --> 43:10.160
逆に言えば今までWebpackで作っていた環境に 何百倍のコンテンツを入れても100msに間に合うようになる

43:10.160 --> 43:13.560
というのがTurboPackの技術と思ってもらったらいいです

43:13.560 --> 43:19.720
そういったものが登場してきたので もちろん組み込み業界

43:19.720 --> 43:28.560
今まで大量のコンテンツを触かなきゃいけなくて メモリリソースやCPUリソースが足りなかった組み込み関係にも大きな影響を与えますし

43:28.560 --> 43:34.640
リッチなWebコンテンツを配信したいと思っている各社メーカーだったり

43:34.640 --> 43:40.720
あとはリッチにいろんなものを組み込める いろんなアルゴリズムを組み込めることによって

43:40.720 --> 43:50.320
より何だろうな 非機能要件 例えば応答速度だったり動画を盛り込んだり

43:50.320 --> 43:59.000
あとはユーザーのアクセスログを仕込んだりといったような これも入れたいあれも入れたいをより達成しやすくなるので

43:59.000 --> 44:09.280
Webコンテンツ自体が要件を満たしやすくなるし お客さんに届けられる価値が増えていくということで

44:09.280 --> 44:20.120
これが早くなれば何でもかんでも良くなるというところの フレームワークの大型アップデートにニュースが来たので紹介でした

44:20.120 --> 44:24.240
はい ちょっとよく分かってないですけどこれは

44:24.240 --> 44:31.520
顧客が使うブラウザ上で展開する速度が速くなるってことですか?

44:31.520 --> 44:36.480
そうです それが700倍になります

44:36.480 --> 44:40.880
どうやって実現してるんですかこれ? 要を払ったって感じですけど

44:40.880 --> 44:47.120
700倍も達成した理由については 俺も正直分かんないですけど

44:47.120 --> 44:53.280
途中のビートとかであれば

44:53.280 --> 45:06.280
まず分散的にダウンロードさせるのと そのレンダリングに必要な最小限の情報を渡したり

45:06.280 --> 45:11.680
ドムツリーみたいなのを小さくしたりとか そんな工夫ですかね

45:11.680 --> 45:24.640
なるほど ミニマムサイズの ざっくり言うと圧縮された情報を渡して それを高速に展開することで

45:24.640 --> 45:33.840
読み込み時間というか再生時間の短縮と 待機の使用量の削減ができているという認識ですかね

45:33.840 --> 45:43.280
そうですね キャッシュをうまく使ってるっていう方が正しいのかな

45:43.280 --> 45:53.600
ちょっと気にしてるのが 最近携帯端末の方のハードウェアスペックは上がってますけど

45:53.600 --> 46:05.680
容量とかの伸びが結構 メモリとかの伸びはそこまで伸びてなくてですね ちょっと飽和してるかなと思っている中で

46:05.680 --> 46:22.160
通信状況が悪いような状況でも 展開表示速度を問題なくブラウジングできるっていうことが重要なのかなとちょっと思っているんですよね

46:22.160 --> 46:32.080
なのでこいつがもし パラレルで待機を一度に掴むことにより高速展開するとかいう手法だと

46:32.080 --> 46:39.200
そういう携帯移動端末向けにはちょっとあんまり 具合が良くないのかなとか思ったりもしたんですけどね

46:39.200 --> 46:47.040
そこらへんどこ向きを考えているのかなという話もちょっと聞きたいかなと思いますね

46:47.040 --> 46:53.280
そうですね 今ちょっと中身を見てたんですけど

46:53.280 --> 47:00.040
一番はキャッシングが高速化に 起因しているということだったので

47:00.040 --> 47:06.280
ネットワーク負荷はそんなに高くないと思います 高速化における

47:06.280 --> 47:18.280
キャッシングっていうと 今までは例えばファイル単位だったり 画像のキャッシュとかはあって キャッシュできる範囲っていうのは結構限定的だったんですけど

47:18.280 --> 47:27.280
今回のこのTurboPackでは JavaScriptの関数単位でキャッシングできる

47:27.280 --> 47:37.280
なので本当にキャッシング… 難しいな

47:37.280 --> 47:45.280
今までだとJavaScriptとかHTMLとか キャッシングできるかどうかまず分からないから

47:45.280 --> 47:52.280
落としてどこまでキャッシングできるか調べて 必要なコンテンツはキャッシュから持ってきて

47:52.280 --> 47:58.280
足りないところはJavaScriptをダウンロードしてきて みたいなことをやってたんですけど

47:58.280 --> 48:07.280
それのキャッシュから持ってこれる範囲が 単純に増えてるって感じですね

48:07.280 --> 48:18.280
なるほど そういう設計思想レベルでの改善なので 全ての端末上で有効なのかな

48:18.280 --> 48:25.280
そうですね それにあればすごくユーザーとしてはありがたいですね

48:25.280 --> 48:32.280
どんどんやってもらいたいなという感じですね

48:32.280 --> 48:39.280
昨今携帯端末とかだと結構メモリの食い合いみたいなのも 大変だなという印象があるので

48:39.280 --> 48:48.280
そこに対してもパソコンのChromeみたいに とりあえずメモリをぶん取るとかだと

48:48.280 --> 48:53.280
ちょっと困るなという気はしたんですけど そういう感じはなさそうなので

48:53.280 --> 49:04.280
そうですね あとコンパイルがだいぶ平準化されてるっぽいですね

49:04.280 --> 49:10.280
従来の形だとHTMLを落としてきて 画像とかのコンテンツを落としてきて

49:10.280 --> 49:15.280
JavaScriptを落としてきて それらがどう動くのかとか全部分かってから

49:15.280 --> 49:21.280
一気にコンパイルかけてバーンと表示する だったんですけど

49:21.280 --> 49:31.280
コンテンツを全部除いて全く空のDOMの状態で 一回コンパイルして表示までやるっぽいですね

49:31.280 --> 49:38.280
その時点では真っ白な画面なんですけど そこからコンテンツとかCSSとか

49:38.280 --> 49:44.280
そういったものをそこからコンパイル始める

49:44.280 --> 49:50.280
なので土台を先にお出ししておいて 後でトッピングするみたいな感じ

49:50.280 --> 50:02.280
っていう動作になるので メモリ負荷が後ろに伸びるのかな

50:02.280 --> 50:09.280
蓄積で出していくんで一気に作業負荷がかからないと

50:09.280 --> 50:15.280
後からトッピングできるようになると 当然CPUとかメモリの並列処理化とかも

50:15.280 --> 50:21.280
できるようになると思うので 良さそうですね

50:21.280 --> 50:26.280
1世代前くらいから必要なところしか コンパイルしないとかはできてたんですけど

50:26.280 --> 50:29.280
それに加えてって感じですね

50:29.280 --> 50:34.280
トップページのブラウザのレンダリングサイズから

50:34.280 --> 50:39.280
1画面目に表示しなければいけない領域っていうのを あらかじめ計算して

50:39.280 --> 50:43.280
その範囲しかコンパイルしないっていう 技術は元々あったんですけど

50:43.280 --> 50:48.280
それに加えてっていう感じみたいです

50:48.280 --> 50:53.280
効く限りすごく良さそうなところばっかりなんで

50:53.280 --> 50:57.280
すごくいいですねという感じですね

50:57.280 --> 51:06.280
あとは特筆するところで言うと 作られてる言語がRUSTという言語になっていて

51:06.280 --> 51:14.280
以前紹介したかわかんないですけど ものすごく安全なC言語みたいな

51:14.280 --> 51:17.280
そういう言語なんですね

51:17.280 --> 51:23.280
これが本当にいろんなところで活躍しだしてる 一つの事例になっていて

51:23.280 --> 51:29.280
RUSTで書かれてるということがあるだけで メモリセーフですし

51:29.280 --> 51:33.280
新しいものだからといって 致命的なトラブルっていうのを

51:33.280 --> 51:37.280
あまり起こさない開発環境で 作られてるんだなっていうだけで

51:37.280 --> 51:41.280
評価が高いって感じですね

51:41.280 --> 51:46.280
新規一転するとバグも内包されやすいですから

51:46.280 --> 51:49.280
そこはありがたいところですね

51:49.280 --> 51:53.280
誰かが皮肉で言ってましたが RUST製ということだけで

51:53.280 --> 51:57.280
プログラムの品質がアホほど上がる なぜならRUSTを理解できる

51:57.280 --> 52:02.280
エンジニアは少ないから

52:02.280 --> 52:06.280
オープンソース資格が真っ向下 対立してるやんって感じですけど

52:06.280 --> 52:10.280
そうですね RUSTが書けるという時点で

52:10.280 --> 52:20.280
メモリとかCPUとかプログラムエンジニア 低レイヤーなことまで開発できる

52:20.280 --> 52:25.280
プログラマーエンジニアでないと RUSTが言ってる意味がわかんないから

52:25.280 --> 52:28.280
なるほどね

52:28.280 --> 52:33.280
RUSTが書けるという時点で 相当レベルの高いプログラマーしか集まらないので

52:33.280 --> 52:37.280
品質が上がりますっていうことを言ってましたね

52:37.280 --> 52:42.280
なんかいいんか悪いんかって感じですけど 結果的には顧客的にはね

52:42.280 --> 52:47.280
使いやすければ使いやすいほどいいんで ありがたいと思いますというところですね

52:47.280 --> 52:50.280
そうですね おっしゃる通り オープンソース界隈だと

52:50.280 --> 52:57.280
さっきのOpenSSLの話もあるんで 信頼性という意味でRUSTは流行っていくでしょうね

52:57.280 --> 53:01.280
はい

53:01.280 --> 53:04.280
では次の話ですね

53:04.280 --> 53:07.280
IT Media Newsさんの記事で

53:07.280 --> 53:12.280
LINEのAIスピーカークローバー販売終了へ 音声操作も不可

53:12.280 --> 53:16.280
7月以降は多度のBluetoothスピーカーへ というタイトルの記事です

53:16.280 --> 53:20.280
LINEは10月26日 AIアシスタントクローバーを搭載した

53:20.280 --> 53:26.280
スマートスピーカークローバーシリーズの販売を 31日をもって終了すると発表した

53:26.280 --> 53:30.280
同端末の音声操作サービス クローバーアシスタントの提供も

53:30.280 --> 53:36.280
2023年3月30日に終了する 終了の理由は可していない

53:36.280 --> 53:38.280
販売を終了するスマートスピーカーは

53:38.280 --> 53:46.280
クローバーウェーブ、クローバーフレンズドック、 クローバーフレンズ、クローバーフレンズミニ、クローバーデックの5種類

53:46.280 --> 53:50.280
LINEはクローバーアシスタントの提供終了後は

53:50.280 --> 53:54.280
Bluetoothスピーカーとして 引き続き利用可能と案内している

53:54.280 --> 53:58.280
利用にはサービス終了前に設定する必要があり

53:58.280 --> 54:01.280
サービス終了後は設定ができなくなるという

54:01.280 --> 54:06.280
クローバーデバイスの購入から1年未満で 端末保証期間中であるユーザーには

54:06.280 --> 54:14.280
端末購入料金払い戻しも実施する予定 払い戻し方法は後日発表するということらしいです

54:14.280 --> 54:24.280
クラウド系のサービス怖いなという話なんですけど

54:24.280 --> 54:29.280
開発企業が撤退してしまうのでサービス提供しません

54:29.280 --> 54:34.280
サービス利用できなくなりますというのはある話なので

54:34.280 --> 54:38.280
それ込みで買ってくださいという話だなという感じですけど

54:38.280 --> 54:47.280
面白いのがただのBluetoothスピーカーとして 設定さえすればできるんですけど

54:47.280 --> 54:52.280
それがサービス終了前に自分で設定する必要があるというのが

54:52.280 --> 55:00.280
もうちょっとなんとかならんかったのかなというところだなという感じの紹介です

55:00.280 --> 55:05.280
終了日にバッジ展開したらいいじゃんって感じだけど

55:05.280 --> 55:10.280
まあオンラインがどうかもわからんからってことなんでしょうけどね

55:10.280 --> 55:14.280
ローカルで使ってる人もいるのか

55:14.280 --> 55:19.280
だったりWi-Fiが常時つながってるかどうかわからない関係のある人もいるでしょう

55:19.280 --> 55:29.280
ギリギリまで使いたいっていう人は勝手にバッジが 適用されてしまうと困るしっていうところだね

55:29.280 --> 55:31.280
とかを考えたんでしょうけど

55:31.280 --> 55:42.280
このニュースを聞いて一番思うところは AIスピーカーなる文化が終わりを迎えようとしてるのかもしれないなっていうところですかね

55:42.280 --> 55:44.280
なるほど

55:44.280 --> 55:52.280
Google系のものだったり Amazonのエコー系のものだったり

55:52.280 --> 55:57.280
Google Homeか Google HomeとAmazonエコーってあったと思うんですけど

55:57.280 --> 56:02.280
どちらも新しい機器っていうのはあんまり出てなくて

56:02.280 --> 56:08.280
アップデートがあるのは基本的に画面付きのものだけですね

56:08.280 --> 56:15.280
当初乱立していたそのスピーカー機能だけが付いてるものっていうのは

56:15.280 --> 56:19.280
ほぼアップデートがなく

56:19.280 --> 56:23.280
だいぶ前のリリースが今も最新モデルとして

56:23.280 --> 56:31.280
引き続けている状態なのでいつそいつらも終わってもおかしくないという状態にあります

56:31.280 --> 56:38.280
LINEさんも日本の国内ではかなり最初の頃は宣伝も打っていましたし

56:38.280 --> 56:41.280
イベント等々で使ってみませんかとか

56:41.280 --> 56:45.280
ハッカソンに使ってみませんかというところで

56:45.280 --> 56:52.280
割とメジャーによく見かける機器だったかなという印象があります

56:52.280 --> 56:56.280
今回サービス終了するということで

56:56.280 --> 57:06.280
AIスピーカーっていうのがこれ以上手を入れる価値がないっていう見限りだと思うんですけど

57:06.280 --> 57:14.280
AIスピーカーとして他のGoogleやAmazonも新しいものを出せていない中

57:14.280 --> 57:20.280
このままAIスピーカー文化自体が終了していくのか

57:20.280 --> 57:27.280
それはもう市場が飽和しきったから競合として勝てなくなったわけなのか

57:27.280 --> 57:31.280
その辺が注目かなっていう感じですかね

57:31.280 --> 57:38.280
難しいですね

57:38.280 --> 57:49.280
AIスピーカーとしてこれ以上できることがなくなったのかなっていう印象もありますけど

57:49.280 --> 57:53.280
何も考えずとりあえず導入してみましょうみたいな

57:53.280 --> 57:58.280
アルファユーザー的な人はもう導入しきってしまって

57:58.280 --> 58:03.280
そこの市場は飽和しているような気はします

58:03.280 --> 58:09.280
一般使用者にまで展開できるかっていうとできてないですねというのは

58:09.280 --> 58:17.280
おそらくそんな気がしていて

58:17.280 --> 58:21.280
そういう意味で言うと市場が広がらなくなった

58:21.280 --> 58:31.280
これ以上スケールするっていう未来が描けなかったんでやめますっていう話になってしまいそうですね

58:31.280 --> 58:38.280
そうなった場合に残るのは今使用しているユーザーの市場規模で

58:38.280 --> 58:46.280
開発側が満足するかどうかという話だと思いますけど

58:46.280 --> 58:48.280
どうなんだろうね

58:48.280 --> 58:50.280
満足しないような気もするんですけど

58:50.280 --> 58:52.280
そうですね

58:52.280 --> 58:56.280
Googleとかはだいぶ早めにやめちゃいそうな気がしますよね

58:56.280 --> 58:58.280
企業文化的に

58:58.280 --> 58:59.280
そうですね

58:59.280 --> 59:06.280
でもAIスピーカーとしてはハードウェアとしてはそう考えるとなくなるかもしれないですね

59:06.280 --> 59:11.280
なのでただ蓄積があった技術として

59:11.280 --> 59:14.280
例えばスマートウォッチに搭載するとか

59:14.280 --> 59:18.280
それもあんまり使ってる人はいないような気もしますけど

59:18.280 --> 59:27.280
ちょっとしたことで使ったら便利だなと思うタイミングで使えるとかあるといいかもしれないんで

59:27.280 --> 59:34.280
機能としては残すみたいな感じでやっていくような気はしますね

59:34.280 --> 59:36.280
そうですね

59:36.280 --> 59:42.280
Googleのスマートアシスタントとかはピクセルウォッチにも搭載されてますし

59:42.280 --> 59:46.280
スマートアシスタントをいろんな機器に搭載させたり

59:46.280 --> 59:51.280
いろんな場面に登場させて活躍機会を増やそうという試みは

59:51.280 --> 59:53.280
粛々と続いていますし

59:53.280 --> 01:00:02.280
スマートアシスタントの音声認識能力の向上及び機能拡張というのもされてはいるかな

01:00:02.280 --> 01:00:06.280
Amazonの方はあんまり成長していないような気がしますけど

01:00:06.280 --> 01:00:08.280
機能拡張という面では

01:00:08.280 --> 01:00:16.280
もうサードパーティーのアプリ依存ですという割り切りで開発が止まっているようにも見えますけど

01:00:16.280 --> 01:00:23.280
活躍のシーンは増えているがおっしゃる通り機器はもう減っていってますね

01:00:23.280 --> 01:00:25.280
そうですね

01:00:25.280 --> 01:00:30.280
そう考えたAmazonはちょっと厳しいのかなという気がしていて

01:00:30.280 --> 01:00:33.280
Googleとかはそれこそなんで

01:00:33.280 --> 01:00:41.280
携帯端末として顧客が喋りに行く

01:00:41.280 --> 01:00:45.280
ウェアラブル系の端末を自社で作っているので

01:00:45.280 --> 01:00:47.280
載せやすいかなという気がしますけど

01:00:47.280 --> 01:00:50.280
Amazonはあんまりそういうのがないんで

01:00:50.280 --> 01:00:56.280
Googleハンドルと載っているならハンドルでいいじゃんみたいな感じになっちゃいそうな感じがしますね

01:00:56.280 --> 01:01:00.280
そうですね

01:01:00.280 --> 01:01:10.280
Amazon側が搭載できる機器ってFire Stick TVとエコーシリーズだけなんですよね

01:01:10.280 --> 01:01:18.280
じゃあFire Stick TVもApple TVとかGoogle TVとかと比べて

01:01:18.280 --> 01:01:22.280
シェアを取れているかというとそうでもないので

01:01:22.280 --> 01:01:26.280
ちょっと厳しそうな気がしますね

01:01:26.280 --> 01:01:32.280
データを扱う業種として

01:01:32.280 --> 01:01:37.280
顧客の音声データって使い方もちょっと議論ありますけど

01:01:37.280 --> 01:01:43.280
生データなんでちょっと手を出したいなというのは分かりますけど

01:01:43.280 --> 01:01:47.280
どこまでやるかはAmazon次第かなというところですね

01:01:47.280 --> 01:01:48.280
そうですね

01:01:48.280 --> 01:01:50.280
Amazonでいうとあれですね

01:01:50.280 --> 01:01:56.280
ルンバのiロボットを買収しているんであっちへの搭載はあるかもしれないですね

01:01:56.280 --> 01:02:01.280
ルンバになるほどアレクサを搭載する

01:02:01.280 --> 01:02:06.280
確かにそれはありそうだよな確かに

01:02:06.280 --> 01:02:09.280
そういう生き残り戦略はあるかもしれないけど

01:02:09.280 --> 01:02:14.280
やっぱり全体的にもう低迷しているというか

01:02:14.280 --> 01:02:19.280
ニュースになっても誰も飛びつかなさそうな雰囲気はありますよね

01:02:19.280 --> 01:02:23.280
今こういう感じのAI系はどちらかというと

01:02:23.280 --> 01:02:31.280
メタバース側がバズってるんでっていうところもありそうですね

01:02:31.280 --> 01:02:36.280
もうちょっと音声認識能力が進んで

01:02:36.280 --> 01:02:39.280
実際しゃべっていることが

01:02:39.280 --> 01:02:44.280
メタバース空間上での吹き出しとして文字で流れるとか

01:02:44.280 --> 01:02:48.280
そういうことになれば全然違うんでしょうけど

01:02:48.280 --> 01:02:52.280
そうなんですよねなんかオープンプラットフォームとして

01:02:52.280 --> 01:02:59.280
なんか音声突っ込めばすごく精度高く返してくれるみたいな

01:02:59.280 --> 01:03:03.280
のが提供されると化ける気はするんですけど

01:03:03.280 --> 01:03:08.280
今でも音声認識なんかいろいろありますけど

01:03:08.280 --> 01:03:13.280
なんだかんだ言ってそんなに精度が良くないというか

01:03:13.280 --> 01:03:14.280
そうですね

01:03:14.280 --> 01:03:19.280
そういう感じでたまに紹介しますけど

01:03:19.280 --> 01:03:22.280
Teamsのやつとかも結構とか

01:03:22.280 --> 01:03:27.280
あとこの前やってたローカルと合わせるやつとかも

01:03:27.280 --> 01:03:34.280
一部の人しかまだ手を出せてない状態

01:03:34.280 --> 01:03:38.280
ちょっと導入コストが高い状態みたいな感じ

01:03:38.280 --> 01:03:41.280
それがハードウェアセッティングだったり

01:03:41.280 --> 01:03:44.280
Teamsを導入しないといけないという

01:03:44.280 --> 01:03:47.280
Teams内で展開しないといけないという制約だったり

01:03:47.280 --> 01:03:50.280
みたいなところがあるんで

01:03:50.280 --> 01:03:53.280
そこら辺がなんか適当にAPI叩くと

01:03:53.280 --> 01:03:59.280
ぶん回せるとかがあると結構強いのかなという気はしますけどね

01:03:59.280 --> 01:04:05.280
そうですね将来的な何年後かは分かんないですけど

01:04:05.280 --> 01:04:08.280
そういう学習モデルをワンチップ化するっていうのも

01:04:08.280 --> 01:04:09.280
ちょいちょい流行ってるじゃないですか

01:04:09.280 --> 01:04:12.280
画像認識系だとは進んでると思うんで

01:04:12.280 --> 01:04:14.280
ああいうチップをマイクに仕込めるようになると

01:04:14.280 --> 01:04:16.280
ちょっと世界変わるんでしょうね

01:04:16.280 --> 01:04:20.280
それいいですね確かに

01:04:20.280 --> 01:04:22.280
確かにそれいいですね

01:04:22.280 --> 01:04:29.280
データとしてUSBを通過するというのもありですね

01:04:29.280 --> 01:04:35.280
音声のアナログデータと圧縮されたデジタルデータ

01:04:35.280 --> 01:04:40.280
音声デジタルデータと文字起こしデータっていうのが

01:04:40.280 --> 01:04:45.280
音声通信企画のデファクトになったりすると

01:04:45.280 --> 01:04:48.280
もうだいぶ強いというか

01:04:48.280 --> 01:04:52.280
それ強くないかな

01:04:52.280 --> 01:04:53.280
何て言うんですか

01:04:53.280 --> 01:04:58.280
マッタン側で処理してデータとして抽出

01:04:58.280 --> 01:05:00.280
テキストデータとして処理できるようにすれば

01:05:00.280 --> 01:05:02.280
あとはトランスレーション

01:05:02.280 --> 01:05:05.280
翻訳して例えば日本語で喋ったのを

01:05:05.280 --> 01:05:09.280
同時に相手に英語で提供する

01:05:09.280 --> 01:05:13.280
しかも音質を学習して

01:05:13.280 --> 01:05:16.280
自分があたかも英語を喋ってるかのような

01:05:16.280 --> 01:05:19.280
語彙質で提供できるとか

01:05:19.280 --> 01:05:26.280
できるとすごくシンギュラリティだなという感じがしますね

01:05:26.280 --> 01:05:29.280
ブレイクスルーはその辺にありそうですね

01:05:29.280 --> 01:05:33.280
それはちょっと世界が変わりそうですね

01:05:33.280 --> 01:05:35.280
東電さんがおっしゃる通り

01:05:35.280 --> 01:05:39.280
まだまだ文字起こし技術自体が

01:05:39.280 --> 01:05:44.280
ワンチップにしたくなるほど熟練してないという事実はあると思うんで

01:05:44.280 --> 01:05:48.280
細々とやってそこまで唐突したなって

01:05:48.280 --> 01:05:51.280
誰かが見込んだら一気にまた変わるかもしれないですね

01:05:51.280 --> 01:05:52.280
そうですね

01:05:52.280 --> 01:05:56.280
それも本当にいつ来るかわからないんでね

01:05:56.280 --> 01:06:01.280
イラストレーション会話はすごく1ヶ月ぐらいずっとざわついてますけど

01:06:01.280 --> 01:06:06.280
あれと同じ状態になるかもしれないんで

01:06:06.280 --> 01:06:12.280
それ期待で続けてもらえればというところです

01:06:12.280 --> 01:06:17.280
では次私の方最後行きたいと思います

01:06:17.280 --> 01:06:21.280
シンセサイズはVに超強力な女性ボーカル

01:06:21.280 --> 01:06:22.280
前が間もなく登場

01:06:22.280 --> 01:06:25.280
もうAIと人間の違いは認知できないレベルに

01:06:25.280 --> 01:06:28.280
ということでDTMステーションさんの記事です

01:06:28.280 --> 01:06:32.280
10月27日シンセサイザーVの新しい歌声データベースとして

01:06:32.280 --> 01:06:36.280
マイクがお披露目となりその歌唱動画が公開されました

01:06:36.280 --> 01:06:41.280
実際にユーザーが入手可能にはもう少し待つ必要がありそうですが

01:06:41.280 --> 01:06:45.280
遅くとも年内には増長するそうですから心待ちにしたいところです

01:06:45.280 --> 01:06:51.280
という事でこれはもう是非動画をまず見て聞いて欲しいんですが

01:06:51.280 --> 01:06:58.280
かなり人間に近い声で喋れてますね

01:06:58.280 --> 01:07:01.280
息継ぎの部分だったりとかビブラートだったりとか

01:07:01.280 --> 01:07:05.280
そういったものが入っているんですが

01:07:05.280 --> 01:07:11.280
驚くべきポイントとしては基本的にベタ打ちでできている

01:07:11.280 --> 01:07:20.280
ベタ打ちっていうのはある声と音の高さとかを調整して

01:07:20.280 --> 01:07:28.280
何秒間それを言うかとかそういう設定だけですね

01:07:28.280 --> 01:07:33.280
ベタ打ちじゃない作業としては音声を何秒間入れるっていう時には

01:07:33.280 --> 01:07:40.280
そこのアナログ情報とかを触って声の欲をつけたりとか

01:07:40.280 --> 01:07:42.280
ビブラートの膨らまし方を変えたりっていう

01:07:42.280 --> 01:07:47.280
さらに細かいアナログな調整っていうのがあったりするんですけど

01:07:47.280 --> 01:07:54.280
シンセサイザーVの前ではそういった中身の調整はなく

01:07:54.280 --> 01:08:01.280
ベタ打ちただ並べていくだけで基本的には曲としてできたというものになってます

01:08:01.280 --> 01:08:06.280
いわゆるボーカロイドとかいったものとの差で言うと

01:08:06.280 --> 01:08:11.280
シンセサイザーVの方は決まった歌い方しかできないので

01:08:11.280 --> 01:08:15.280
曲はかなり選ぶっていうところがあったりすると思いますけれども

01:08:15.280 --> 01:08:21.280
それでも機械的に作られた音楽として

01:08:21.280 --> 01:08:26.280
人間にかなり近い音声が出ているということ自体は驚きだと思いますし

01:08:26.280 --> 01:08:31.280
それに合わせた楽曲の作り方とかもあると思います

01:08:31.280 --> 01:08:34.280
シンセサイザーVは別にこの前だけが提供されてるわけじゃなくて

01:08:34.280 --> 01:08:37.280
いろんなものが提供されてますので

01:08:37.280 --> 01:08:41.280
これをフル活用して自分の楽曲を作っていくっていうのも

01:08:41.280 --> 01:08:46.280
面白い世界になっていくんじゃないかなとは思います

01:08:46.280 --> 01:08:53.280
まず単純に新しい技術

01:08:53.280 --> 01:09:00.280
新しい製品が出てくれるのは良いですねという話

01:09:00.280 --> 01:09:04.280
途中にもありましたけどボーカロイドの方も出してますし

01:09:04.280 --> 01:09:10.280
このシンセサイザーVとしても新機能を搭載して

01:09:10.280 --> 01:09:20.280
ベタ打ちでサクッとお出しできるっていうのはすごくいいなというところです

01:09:20.280 --> 01:09:25.280
その上で

01:09:25.280 --> 01:09:30.280
初音ミクの再来というのはできるのかなというのは

01:09:30.280 --> 01:09:35.280
難しい話ですねとはちょっと思ってまして

01:09:35.280 --> 01:09:40.280
技術がすごければ初音ミクの再来になるかってそうじゃないなと思っていて

01:09:40.280 --> 01:09:44.280
っていうのは

01:09:44.280 --> 01:09:47.280
初音ミクの元を超えて

01:09:47.280 --> 01:09:51.280
池尾本の藤田崎さんのように歌わせるみたいなのは

01:09:51.280 --> 01:09:55.280
正直もう10年前にはできているんですよね

01:09:55.280 --> 01:09:59.280
ただそれはやはり流行らなくて

01:09:59.280 --> 01:10:06.280
初音ミクとしてのボーカロイドには載っていないということになっていて

01:10:06.280 --> 01:10:11.280
それは何でかっていうともはや初音ミクとして

01:10:11.280 --> 01:10:14.280
キャラクターが確立されているので

01:10:14.280 --> 01:10:18.280
その肉性に合わせているよりも

01:10:18.280 --> 01:10:23.280
初音ミクとしての声を提供することを優先している

01:10:23.280 --> 01:10:27.280
という話があったりするという中で

01:10:27.280 --> 01:10:31.280
このSynthesizer Vの方は

01:10:31.280 --> 01:10:39.280
すごく肉性に近い歌い方をしてくれる

01:10:39.280 --> 01:10:42.280
たださっき言った通り

01:10:42.280 --> 01:10:53.280
曲の方向性が結構限定されるという状況で提供されたことで

01:10:53.280 --> 01:10:58.280
曲数が出しやすいのか出しにくいのか

01:10:58.280 --> 01:11:03.280
まあ難しいねという感じがしていて

01:11:03.280 --> 01:11:08.280
なので初心者が使うにはすごく突きやすいという意味では

01:11:08.280 --> 01:11:16.280
すごく技術としていいかなと思いますけど

01:11:16.280 --> 01:11:20.280
もう1回初音ミクレベルになるかというと

01:11:20.280 --> 01:11:23.280
難しいのかなと思ったり思わなかったり

01:11:23.280 --> 01:11:27.280
難しいなというところ

01:11:27.280 --> 01:11:35.280
機械的な自動音声

01:11:35.280 --> 01:11:42.280
AI歌声構成エンジンの使われ方の方向性として

01:11:42.280 --> 01:11:52.280
実際どういう利用方法と商品があるのかという話だと思っていて

01:11:52.280 --> 01:11:55.280
その初音ミク系というのは

01:11:55.280 --> 01:11:58.280
私はこういう音楽を使いたい

01:11:58.280 --> 01:12:01.280
で楽器の中に声がないから欲しい

01:12:01.280 --> 01:12:07.280
というスタートだと思っているんですよね

01:12:07.280 --> 01:12:10.280
そこが求められたことだから

01:12:10.280 --> 01:12:14.280
人間に近い音声で作れる音楽が狭まるという方向性は

01:12:14.280 --> 01:12:19.280
基本的に求められてこなかっただと思っています

01:12:19.280 --> 01:12:22.280
一方で音楽を作るといった時に

01:12:22.280 --> 01:12:26.280
歌手がいてこの人が歌ういい曲を出してください

01:12:26.280 --> 01:12:32.280
ということで作曲作詞する人も当然いるわけじゃないですか

01:12:32.280 --> 01:12:37.280
そういう人は歌い手が決まっている上で出すんですけど

01:12:37.280 --> 01:12:40.280
そういう技術を磨こうと思った時に

01:12:40.280 --> 01:12:45.280
著名な歌い手の下で作曲できないと

01:12:45.280 --> 01:12:51.280
作曲家として名を馳せられないという問題がありますよね

01:12:51.280 --> 01:12:56.280
それの宣伝能力とかはその歌い手に依存してしまう

01:12:56.280 --> 01:12:58.280
という問題があるので

01:12:58.280 --> 01:13:02.280
作曲家として歌い手に依存せず

01:13:02.280 --> 01:13:07.280
さっきの形態で音楽を世の中に出していこうと思うと

01:13:07.280 --> 01:13:13.280
こういったシンセサイザーVも登場してくるのかなとは思います

01:13:13.280 --> 01:13:15.280
なるほど

01:13:15.280 --> 01:13:20.280
確かにそういう意味で言えば

01:13:20.280 --> 01:13:25.280
自分の作りたい曲の方向性と

01:13:25.280 --> 01:13:31.280
シンセサイザーVの前の歌声の方向性があっていれば

01:13:31.280 --> 01:13:34.280
何も心配もなく

01:13:34.280 --> 01:13:36.280
リッチと言っていいのかどうかわからないですけど

01:13:36.280 --> 01:13:43.280
前の歌声でその曲を出せる

01:13:43.280 --> 01:13:47.280
あっていればというよりは

01:13:47.280 --> 01:13:51.280
プロ作曲家としては自分の曲を

01:13:51.280 --> 01:13:54.280
プロ作曲家としてというより

01:13:54.280 --> 01:14:00.280
芸術家みたいな音楽活動をしている人と

01:14:00.280 --> 01:14:02.280
自分自己発信

01:14:02.280 --> 01:14:07.280
自己発言のための音楽活動の人と

01:14:07.280 --> 01:14:11.280
プロとして受注して言われた要求事項

01:14:11.280 --> 01:14:15.280
要件に基づいて曲を作って下ろす

01:14:15.280 --> 01:14:19.280
ということをやっている人っているわけじゃないですか

01:14:19.280 --> 01:14:22.280
校舎の人にとっては

01:14:22.280 --> 01:14:27.280
もう歌い手とかどういうシーンでどういう風に使われるかという制約があって

01:14:27.280 --> 01:14:32.280
その中でベストな曲を作るって話になりますよね

01:14:32.280 --> 01:14:38.280
そういう制約の一つでしかないと思うんですよ

01:14:38.280 --> 01:14:41.280
このシンセサイザーVの前っていう歌い手が

01:14:41.280 --> 01:14:45.280
そういう歌い方しかできないっていうのは

01:14:45.280 --> 01:14:48.280
そういう中で

01:14:48.280 --> 01:14:52.280
歌い手に縛られない形で作曲がしたい

01:14:52.280 --> 01:14:57.280
となると役に立つのかなという

01:14:57.280 --> 01:15:01.280
人間の歌い手に縛られずにっていう

01:15:01.280 --> 01:15:04.280
そういう発注方法だと

01:15:04.280 --> 01:15:07.280
発注元にその宣伝権限とか

01:15:07.280 --> 01:15:10.280
その曲をどう扱うかの権限があって

01:15:10.280 --> 01:15:15.280
その裏手でいいのかな

01:15:15.280 --> 01:15:19.280
裏側のスタッフ的な存在にしかなり得なくて

01:15:19.280 --> 01:15:22.280
表出できないじゃないですか

01:15:22.280 --> 01:15:25.280
自己スキルを

01:15:25.280 --> 01:15:34.280
なんでそういう発言には役に立つのかなって感じですかね

01:15:34.280 --> 01:15:42.280
まあ確かに

01:15:42.280 --> 01:15:44.280
そうですね

01:15:44.280 --> 01:15:53.280
自分の手元で確かに作品を上げられるというところでは

01:15:53.280 --> 01:15:55.280
ありですね

01:15:55.280 --> 01:15:58.280
まあ確かにそうか

01:15:58.280 --> 01:16:06.280
まあそういう意味で言えば

01:16:06.280 --> 01:16:10.280
やっぱりコスト少なく出せるというところが

01:16:10.280 --> 01:16:14.280
起点ではあるのかな

01:16:14.280 --> 01:16:16.280
そうですねだから

01:16:16.280 --> 01:16:19.280
これを使って

01:16:19.280 --> 01:16:23.280
もし何かその出た曲が人気が出るとしたら

01:16:23.280 --> 01:16:25.280
作曲家が人気出るんであって

01:16:25.280 --> 01:16:32.280
シンセサイザーVの前が人気出るわけではないと思う

01:16:32.280 --> 01:16:35.280
まあそうですね

01:16:35.280 --> 01:16:37.280
初音ミクとかボーカロイドの場合は

01:16:37.280 --> 01:16:42.280
ボーカロイドが人気出てこんな歌い方をプロデュースした

01:16:42.280 --> 01:16:44.280
Pは誰だっていう

01:16:44.280 --> 01:16:51.280
2番目として作曲家の人が目立ってたと思うんですけど

01:16:51.280 --> 01:16:58.280
シンセサイザーVの場合は逆になるんじゃないですかね

01:16:58.280 --> 01:17:01.280
なるほどね

01:17:01.280 --> 01:17:04.280
そうかそれであればいいか

01:17:04.280 --> 01:17:07.280
確かに確か方向性が違うという話ですね

01:17:07.280 --> 01:17:08.280
結局のところ

01:17:08.280 --> 01:17:11.280
そうそうそう結局はそう

01:17:11.280 --> 01:17:16.280
そうですねそういうところであれば確かに分かりました

01:17:16.280 --> 01:17:19.280
私も別に曲を作ってるわけじゃないんで

01:17:19.280 --> 01:17:21.280
想像でしかないんですけど

01:17:21.280 --> 01:17:25.280
まあそうですね

01:17:25.280 --> 01:17:29.280
どうしても初音ミクありきでちょっと考えてたんで

01:17:29.280 --> 01:17:39.280
そういう方向性ならちょっと腹落ちしたなというところでいいと思います

01:17:39.280 --> 01:17:43.280
この件も以上です

01:17:43.280 --> 01:17:45.280
最後

01:17:45.280 --> 01:17:52.280
米の観測衛星世界50以上の地域でメタン大量排出源を特定

01:17:52.280 --> 01:17:57.280
Jトロさんの記事から持ってきました

01:17:57.280 --> 01:18:06.280
米国航空宇宙局NASAは10月25日

01:18:06.280 --> 01:18:15.280
同局が7月に打ち上げた観測衛星による地球表面光物人間調査ミッションにより

01:18:15.280 --> 01:18:19.280
中央アジア中東米国南西部などの地域で

01:18:19.280 --> 01:18:24.280
50以上のメタンガスの大量発生源を特定したと発表した

01:18:24.280 --> 01:18:30.280
大量発生源の一つとして特定された米国南部のパーミアン盆地では

01:18:30.280 --> 01:18:35.280
南東約2マイルの長さにわたりメタンガスが検出され

01:18:35.280 --> 01:18:41.280
1時間あたりの流量は約4300ポンドと推定されている

01:18:41.280 --> 01:18:48.280
パーミアン第一はテキサス州西部とメキシコ州南東部の一部にまたがる地域で

01:18:48.280 --> 01:18:54.280
国内有数の石油ガスの産出地として知られている

01:18:54.280 --> 01:18:57.280
NASAのビルネルソン長官は

01:18:57.280 --> 01:19:03.280
メタンガスの排出を抑制することは地球温暖化を抑制するための重要な課題と述べた上で

01:19:03.280 --> 01:19:08.280
国際宇宙ステーションとNASAが保有する20以上の衛星や観測機器は

01:19:08.280 --> 01:19:14.280
地球の気候変動を把握する上で長い間非常に重要な役割を担っていた

01:19:14.280 --> 01:19:22.280
リミットは温室効果ガスを測定し発生源で食い止めるための重要なツールであることが証明されていると述べた

01:19:22.280 --> 01:19:26.280
なおメタンガスの排出源を特定しようとする試みでは

01:19:26.280 --> 01:19:29.280
非営利団体のカーボンマッパーが8月に

01:19:29.280 --> 01:19:34.280
米国メキシコ湾浅瀬域の海洋石油ガス施設から

01:19:34.280 --> 01:19:38.280
メタンが大量に漏出しているとの調査結果を発表していた

01:19:38.280 --> 01:19:51.280
ということで地球温暖化ガス温室効果ガスの排出が世界的に低減していこうという中で

01:19:51.280 --> 01:19:57.280
地表から漏れているのも対応できるといいよねという話は当然ある話でして

01:19:57.280 --> 01:20:02.280
それに対応してNASAが観測衛星打ち上げで実施していると

01:20:02.280 --> 01:20:10.280
成果が出ましたという話でよいかなと思っての紹介ですというところですね

01:20:10.280 --> 01:20:12.280
素直にいいことしかない

01:20:12.280 --> 01:20:19.280
いいことしかないと言ったらあれですけど

01:20:19.280 --> 01:20:26.280
機体なので目に見えてあそこからどうこうとかそういうことってわからなくて

01:20:26.280 --> 01:20:30.280
やっぱりその地域を観測しに行くしかない

01:20:30.280 --> 01:20:34.280
当たり前ですが地球ってでかくて広いので

01:20:34.280 --> 01:20:39.280
全体を常にモニタリングするなんて非現実的でやってられない

01:20:39.280 --> 01:20:45.280
ただいくら人間の活動でメタンガスの抑制とかを進めたところで

01:20:45.280 --> 01:20:48.280
こういう自然的発生源だったりとか

01:20:48.280 --> 01:20:57.280
そういったところでのガス発生量が実質的には大多数を占めてたりすると思うので

01:20:57.280 --> 01:21:02.280
そういったものを管理できるようになるという意味ですごく良いんじゃないですかね

01:21:02.280 --> 01:21:07.280
そうですね

01:21:07.280 --> 01:21:13.280
京都議定書とかの目標に対してこれが勘案されてなかったら

01:21:13.280 --> 01:21:18.280
それはそれで良くないよねという気もせんこともないですけど

01:21:18.280 --> 01:21:26.280
これによって実質的に結果として地球温暖化が抑制されたということになれれば

01:21:26.280 --> 01:21:34.280
非常に良いと思うので制御性を高める上でも非常に重要ですねというところですし

01:21:34.280 --> 01:21:44.280
それを実際に衛星を打ち上げて対応しに行っているというのは非常に良いことだなというところですね

01:21:44.280 --> 01:21:49.280
良いことしかないかなという感じですね

01:21:49.280 --> 01:21:52.280
ここからは多分政治的な問題で

01:21:52.280 --> 01:22:00.280
じゃあ中国でどれくらい出てるってなった時に中国当局にそこのインフラを何とかして

01:22:00.280 --> 01:22:06.280
露出を防止しなさいという指示が出せるのかと言われるとまだ難しい

01:22:06.280 --> 01:22:14.280
まあ議論になるわけど合意はしないでしょうねという感じでしょうねと思いますけど

01:22:14.280 --> 01:22:21.280
結局国内というか国土の話になってしまってね

01:22:21.280 --> 01:22:30.280
課題をちゃんと目に見える形で表面化させること自体は大変偉いので

01:22:30.280 --> 01:22:34.280
それ自体は本当に素晴らしいと思いますね

01:22:34.280 --> 01:22:40.280
そうですねデータがないとやっぱり適当になんか弾いてこんなもんかつって

01:22:40.280 --> 01:22:43.280
実際そこまで効果があるのって

01:22:43.280 --> 01:22:52.280
統計も優秀なツールではありますけど実際ここに問題点があると

01:22:52.280 --> 01:22:57.280
じゃあここを対策しに行きましょうねとできるっていうのは素晴らしい話なんで

01:22:57.280 --> 01:23:04.280
良いと思いますねというところです

01:23:04.280 --> 01:23:11.280
例に出ている特定の施設からの露出の結果とかもありますけど

01:23:11.280 --> 01:23:17.280
そういったものはなさとしてもなんか出しにくいだろうなと思いますけどね

01:23:17.280 --> 01:23:21.280
まあそうですね

01:23:21.280 --> 01:23:25.280
まあでも観測結果は観測結果なんで

01:23:25.280 --> 01:23:33.280
まあそれをもってアメリカがどうするかとかなんじゃないですかやっぱり

01:23:33.280 --> 01:23:37.280
そうですね

01:23:37.280 --> 01:23:39.280
じゃあ今日はこんなもんですかね

01:23:39.280 --> 01:23:44.280
はい本日の内容は小納豆にまとめていますのでご確認ください

01:23:44.280 --> 01:23:48.280
リカログではご意見ご感想やこんなことを話してほしい対応もお待ちしています

01:23:48.280 --> 01:23:52.280
メールアドレスはリカログアットマグジメール.comになります

01:23:52.280 --> 01:23:56.280
ツイッターもやっていますのでフォローやダイレクトメッセージもお待ちしています

01:23:56.280 --> 01:24:00.280
本番組はpodcast.spotify.youtubeで聞くことができます

01:24:00.280 --> 01:24:04.280
ぜひそちらでもサブスクライブよろしくお願いいたします

01:24:04.280 --> 01:24:06.280
はいではお疲れ様でした

01:24:06.280 --> 01:24:09.280
はいお疲れさんでした

